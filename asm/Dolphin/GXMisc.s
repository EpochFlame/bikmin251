.include "macros.inc"
.section .sbss # 0x80514D80 - 0x80516360
.balign 8
TokenCB:
	.skip 0x4
DrawDoneCB:
	.skip 0x4
DrawDone:
	.skip 0x1
.balign 4
FinishQueue:
	.skip 0x8

.section .text, "ax"  # 0x800056C0 - 0x80472F00
.global GXSetMisc
GXSetMisc:
/* 800E4FD8 000E1F18  2C 03 00 02 */	cmpwi r3, 2
/* 800E4FDC 000E1F1C  41 82 00 60 */	beq .L_800E503C
/* 800E4FE0 000E1F20  40 80 00 14 */	bge .L_800E4FF4
/* 800E4FE4 000E1F24  2C 03 00 00 */	cmpwi r3, 0
/* 800E4FE8 000E1F28  4D 82 00 20 */	beqlr 
/* 800E4FEC 000E1F2C  40 80 00 14 */	bge .L_800E5000
/* 800E4FF0 000E1F30  4E 80 00 20 */	blr 
.L_800E4FF4:
/* 800E4FF4 000E1F34  2C 03 00 04 */	cmpwi r3, 4
/* 800E4FF8 000E1F38  4C 80 00 20 */	bgelr 
/* 800E4FFC 000E1F3C  48 00 00 58 */	b .L_800E5054
.L_800E5000:
/* 800E5000 000E1F40  80 A2 92 90 */	lwz r5, __GXData@sda21(r2)
/* 800E5004 000E1F44  38 00 00 01 */	li r0, 1
/* 800E5008 000E1F48  B0 85 00 04 */	sth r4, 4(r5)
/* 800E500C 000E1F4C  A0 65 00 04 */	lhz r3, 4(r5)
/* 800E5010 000E1F50  7C 63 00 34 */	cntlzw r3, r3
/* 800E5014 000E1F54  54 63 DC 3E */	rlwinm r3, r3, 0x1b, 0x10, 0x1f
/* 800E5018 000E1F58  B0 65 00 00 */	sth r3, 0(r5)
/* 800E501C 000E1F5C  B0 05 00 02 */	sth r0, 2(r5)
/* 800E5020 000E1F60  A0 05 00 04 */	lhz r0, 4(r5)
/* 800E5024 000E1F64  28 00 00 00 */	cmplwi r0, 0
/* 800E5028 000E1F68  4D 82 00 20 */	beqlr 
/* 800E502C 000E1F6C  80 05 05 AC */	lwz r0, 0x5ac(r5)
/* 800E5030 000E1F70  60 00 00 08 */	ori r0, r0, 8
/* 800E5034 000E1F74  90 05 05 AC */	stw r0, 0x5ac(r5)
/* 800E5038 000E1F78  4E 80 00 20 */	blr 
.L_800E503C:
/* 800E503C 000E1F7C  7C 84 00 D0 */	neg r4, r4
/* 800E5040 000E1F80  80 62 92 90 */	lwz r3, __GXData@sda21(r2)
/* 800E5044 000E1F84  30 04 FF FF */	addic r0, r4, -1
/* 800E5048 000E1F88  7C 00 21 10 */	subfe r0, r0, r4
/* 800E504C 000E1F8C  98 03 05 A9 */	stb r0, 0x5a9(r3)
/* 800E5050 000E1F90  4E 80 00 20 */	blr 
.L_800E5054:
/* 800E5054 000E1F94  7C 84 00 D0 */	neg r4, r4
/* 800E5058 000E1F98  80 62 92 90 */	lwz r3, __GXData@sda21(r2)
/* 800E505C 000E1F9C  30 04 FF FF */	addic r0, r4, -1
/* 800E5060 000E1FA0  7C 00 21 10 */	subfe r0, r0, r4
/* 800E5064 000E1FA4  98 03 05 AA */	stb r0, 0x5aa(r3)
/* 800E5068 000E1FA8  4E 80 00 20 */	blr 

.global GXFlush
GXFlush:
/* 800E506C 000E1FAC  7C 08 02 A6 */	mflr r0
/* 800E5070 000E1FB0  90 01 00 04 */	stw r0, 4(r1)
/* 800E5074 000E1FB4  94 21 FF F8 */	stwu r1, -8(r1)
/* 800E5078 000E1FB8  80 62 92 90 */	lwz r3, __GXData@sda21(r2)
/* 800E507C 000E1FBC  80 03 05 AC */	lwz r0, 0x5ac(r3)
/* 800E5080 000E1FC0  28 00 00 00 */	cmplwi r0, 0
/* 800E5084 000E1FC4  41 82 00 08 */	beq .L_800E508C
/* 800E5088 000E1FC8  48 00 08 81 */	bl __GXSetDirtyState
.L_800E508C:
/* 800E508C 000E1FCC  38 00 00 00 */	li r0, 0
/* 800E5090 000E1FD0  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800E5094 000E1FD4  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E5098 000E1FD8  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E509C 000E1FDC  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E50A0 000E1FE0  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E50A4 000E1FE4  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E50A8 000E1FE8  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E50AC 000E1FEC  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E50B0 000E1FF0  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800E50B4 000E1FF4  4B FE F4 DD */	bl PPCSync
/* 800E50B8 000E1FF8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800E50BC 000E1FFC  38 21 00 08 */	addi r1, r1, 8
/* 800E50C0 000E2000  7C 08 03 A6 */	mtlr r0
/* 800E50C4 000E2004  4E 80 00 20 */	blr 

.global __GXAbort
__GXAbort:
/* 800E50C8 000E2008  7C 08 02 A6 */	mflr r0
/* 800E50CC 000E200C  90 01 00 04 */	stw r0, 4(r1)
/* 800E50D0 000E2010  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800E50D4 000E2014  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 800E50D8 000E2018  80 62 92 90 */	lwz r3, __GXData@sda21(r2)
/* 800E50DC 000E201C  88 03 05 AA */	lbz r0, 0x5aa(r3)
/* 800E50E0 000E2020  28 00 00 00 */	cmplwi r0, 0
/* 800E50E4 000E2024  41 82 00 B0 */	beq .L_800E5194
/* 800E50E8 000E2028  4B FF F1 95 */	bl GXGetGPFifo
/* 800E50EC 000E202C  28 03 00 00 */	cmplwi r3, 0
/* 800E50F0 000E2030  41 82 00 A4 */	beq .L_800E5194
/* 800E50F4 000E2034  80 6D 8E BC */	lwz r3, __memReg@sda21(r13)
/* 800E50F8 000E2038  38 C3 00 4E */	addi r6, r3, 0x4e
/* 800E50FC 000E203C  A0 83 00 4E */	lhz r4, 0x4e(r3)
/* 800E5100 000E2040  38 A3 00 50 */	addi r5, r3, 0x50
.L_800E5104:
/* 800E5104 000E2044  7C 80 23 78 */	mr r0, r4
/* 800E5108 000E2048  A0 86 00 00 */	lhz r4, 0(r6)
/* 800E510C 000E204C  A0 65 00 00 */	lhz r3, 0(r5)
/* 800E5110 000E2050  7C 04 00 40 */	cmplw r4, r0
/* 800E5114 000E2054  40 82 FF F0 */	bne .L_800E5104
/* 800E5118 000E2058  54 80 80 1E */	slwi r0, r4, 0x10
/* 800E511C 000E205C  7C 1B 1B 78 */	or r27, r0, r3
.L_800E5120:
/* 800E5120 000E2060  48 00 DA 71 */	bl OSGetTime
/* 800E5124 000E2064  38 00 00 00 */	li r0, 0
/* 800E5128 000E2068  3B E4 00 00 */	addi r31, r4, 0
/* 800E512C 000E206C  3B C3 00 00 */	addi r30, r3, 0
/* 800E5130 000E2070  6C 1C 80 00 */	xoris r28, r0, 0x8000
/* 800E5134 000E2074  3B A0 00 08 */	li r29, 8
.L_800E5138:
/* 800E5138 000E2078  48 00 DA 59 */	bl OSGetTime
/* 800E513C 000E207C  7C 9F 20 10 */	subfc r4, r31, r4
/* 800E5140 000E2080  7C 1E 19 10 */	subfe r0, r30, r3
/* 800E5144 000E2084  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800E5148 000E2088  7C 04 E8 10 */	subfc r0, r4, r29
/* 800E514C 000E208C  7C 63 E1 10 */	subfe r3, r3, r28
/* 800E5150 000E2090  7C 7C E1 10 */	subfe r3, r28, r28
/* 800E5154 000E2094  7C 63 00 D1 */	neg. r3, r3
/* 800E5158 000E2098  41 82 FF E0 */	beq .L_800E5138
/* 800E515C 000E209C  80 6D 8E BC */	lwz r3, __memReg@sda21(r13)
/* 800E5160 000E20A0  38 C3 00 4E */	addi r6, r3, 0x4e
/* 800E5164 000E20A4  A0 83 00 4E */	lhz r4, 0x4e(r3)
/* 800E5168 000E20A8  38 A3 00 50 */	addi r5, r3, 0x50
.L_800E516C:
/* 800E516C 000E20AC  7C 80 23 78 */	mr r0, r4
/* 800E5170 000E20B0  A0 86 00 00 */	lhz r4, 0(r6)
/* 800E5174 000E20B4  A0 65 00 00 */	lhz r3, 0(r5)
/* 800E5178 000E20B8  7C 04 00 40 */	cmplw r4, r0
/* 800E517C 000E20BC  40 82 FF F0 */	bne .L_800E516C
/* 800E5180 000E20C0  54 80 80 1E */	slwi r0, r4, 0x10
/* 800E5184 000E20C4  7C 00 1B 78 */	or r0, r0, r3
/* 800E5188 000E20C8  7C 00 D8 40 */	cmplw r0, r27
/* 800E518C 000E20CC  7C 1B 03 78 */	mr r27, r0
/* 800E5190 000E20D0  40 82 FF 90 */	bne .L_800E5120
.L_800E5194:
/* 800E5194 000E20D4  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 800E5198 000E20D8  38 00 00 01 */	li r0, 1
/* 800E519C 000E20DC  3B 63 30 00 */	addi r27, r3, 0xCC003000@l
/* 800E51A0 000E20E0  94 1B 00 18 */	stwu r0, 0x18(r27)
/* 800E51A4 000E20E4  48 00 D9 ED */	bl OSGetTime
/* 800E51A8 000E20E8  38 00 00 00 */	li r0, 0
/* 800E51AC 000E20EC  3B E4 00 00 */	addi r31, r4, 0
/* 800E51B0 000E20F0  3B C3 00 00 */	addi r30, r3, 0
/* 800E51B4 000E20F4  6C 1C 80 00 */	xoris r28, r0, 0x8000
/* 800E51B8 000E20F8  3B A0 00 32 */	li r29, 0x32
.L_800E51BC:
/* 800E51BC 000E20FC  48 00 D9 D5 */	bl OSGetTime
/* 800E51C0 000E2100  7C 9F 20 10 */	subfc r4, r31, r4
/* 800E51C4 000E2104  7C 1E 19 10 */	subfe r0, r30, r3
/* 800E51C8 000E2108  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800E51CC 000E210C  7C 04 E8 10 */	subfc r0, r4, r29
/* 800E51D0 000E2110  7C 63 E1 10 */	subfe r3, r3, r28
/* 800E51D4 000E2114  7C 7C E1 10 */	subfe r3, r28, r28
/* 800E51D8 000E2118  7C 63 00 D1 */	neg. r3, r3
/* 800E51DC 000E211C  41 82 FF E0 */	beq .L_800E51BC
/* 800E51E0 000E2120  3B C0 00 00 */	li r30, 0
/* 800E51E4 000E2124  93 DB 00 00 */	stw r30, 0(r27)
/* 800E51E8 000E2128  48 00 D9 A9 */	bl OSGetTime
/* 800E51EC 000E212C  3B 84 00 00 */	addi r28, r4, 0
/* 800E51F0 000E2130  3B A3 00 00 */	addi r29, r3, 0
/* 800E51F4 000E2134  6F DF 80 00 */	xoris r31, r30, 0x8000
/* 800E51F8 000E2138  3B C0 00 05 */	li r30, 5
.L_800E51FC:
/* 800E51FC 000E213C  48 00 D9 95 */	bl OSGetTime
/* 800E5200 000E2140  7C 9C 20 10 */	subfc r4, r28, r4
/* 800E5204 000E2144  7C 1D 19 10 */	subfe r0, r29, r3
/* 800E5208 000E2148  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800E520C 000E214C  7C 04 F0 10 */	subfc r0, r4, r30
/* 800E5210 000E2150  7C 63 F9 10 */	subfe r3, r3, r31
/* 800E5214 000E2154  7C 7F F9 10 */	subfe r3, r31, r31
/* 800E5218 000E2158  7C 63 00 D1 */	neg. r3, r3
/* 800E521C 000E215C  41 82 FF E0 */	beq .L_800E51FC
/* 800E5220 000E2160  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 800E5224 000E2164  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800E5228 000E2168  38 21 00 28 */	addi r1, r1, 0x28
/* 800E522C 000E216C  7C 08 03 A6 */	mtlr r0
/* 800E5230 000E2170  4E 80 00 20 */	blr 

.global GXAbortFrame
GXAbortFrame:
/* 800E5234 000E2174  7C 08 02 A6 */	mflr r0
/* 800E5238 000E2178  90 01 00 04 */	stw r0, 4(r1)
/* 800E523C 000E217C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800E5240 000E2180  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 800E5244 000E2184  80 62 92 90 */	lwz r3, __GXData@sda21(r2)
/* 800E5248 000E2188  88 03 05 AA */	lbz r0, 0x5aa(r3)
/* 800E524C 000E218C  28 00 00 00 */	cmplwi r0, 0
/* 800E5250 000E2190  41 82 00 B0 */	beq .L_800E5300
/* 800E5254 000E2194  4B FF F0 29 */	bl GXGetGPFifo
/* 800E5258 000E2198  28 03 00 00 */	cmplwi r3, 0
/* 800E525C 000E219C  41 82 00 A4 */	beq .L_800E5300
/* 800E5260 000E21A0  80 6D 8E BC */	lwz r3, __memReg@sda21(r13)
/* 800E5264 000E21A4  38 C3 00 4E */	addi r6, r3, 0x4e
/* 800E5268 000E21A8  A0 83 00 4E */	lhz r4, 0x4e(r3)
/* 800E526C 000E21AC  38 A3 00 50 */	addi r5, r3, 0x50
.L_800E5270:
/* 800E5270 000E21B0  7C 80 23 78 */	mr r0, r4
/* 800E5274 000E21B4  A0 86 00 00 */	lhz r4, 0(r6)
/* 800E5278 000E21B8  A0 65 00 00 */	lhz r3, 0(r5)
/* 800E527C 000E21BC  7C 04 00 40 */	cmplw r4, r0
/* 800E5280 000E21C0  40 82 FF F0 */	bne .L_800E5270
/* 800E5284 000E21C4  54 80 80 1E */	slwi r0, r4, 0x10
/* 800E5288 000E21C8  7C 1B 1B 78 */	or r27, r0, r3
.L_800E528C:
/* 800E528C 000E21CC  48 00 D9 05 */	bl OSGetTime
/* 800E5290 000E21D0  38 00 00 00 */	li r0, 0
/* 800E5294 000E21D4  3B E4 00 00 */	addi r31, r4, 0
/* 800E5298 000E21D8  3B C3 00 00 */	addi r30, r3, 0
/* 800E529C 000E21DC  6C 1C 80 00 */	xoris r28, r0, 0x8000
/* 800E52A0 000E21E0  3B A0 00 08 */	li r29, 8
.L_800E52A4:
/* 800E52A4 000E21E4  48 00 D8 ED */	bl OSGetTime
/* 800E52A8 000E21E8  7C 9F 20 10 */	subfc r4, r31, r4
/* 800E52AC 000E21EC  7C 1E 19 10 */	subfe r0, r30, r3
/* 800E52B0 000E21F0  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800E52B4 000E21F4  7C 04 E8 10 */	subfc r0, r4, r29
/* 800E52B8 000E21F8  7C 63 E1 10 */	subfe r3, r3, r28
/* 800E52BC 000E21FC  7C 7C E1 10 */	subfe r3, r28, r28
/* 800E52C0 000E2200  7C 63 00 D1 */	neg. r3, r3
/* 800E52C4 000E2204  41 82 FF E0 */	beq .L_800E52A4
/* 800E52C8 000E2208  80 6D 8E BC */	lwz r3, __memReg@sda21(r13)
/* 800E52CC 000E220C  38 C3 00 4E */	addi r6, r3, 0x4e
/* 800E52D0 000E2210  A0 83 00 4E */	lhz r4, 0x4e(r3)
/* 800E52D4 000E2214  38 A3 00 50 */	addi r5, r3, 0x50
.L_800E52D8:
/* 800E52D8 000E2218  7C 80 23 78 */	mr r0, r4
/* 800E52DC 000E221C  A0 86 00 00 */	lhz r4, 0(r6)
/* 800E52E0 000E2220  A0 65 00 00 */	lhz r3, 0(r5)
/* 800E52E4 000E2224  7C 04 00 40 */	cmplw r4, r0
/* 800E52E8 000E2228  40 82 FF F0 */	bne .L_800E52D8
/* 800E52EC 000E222C  54 80 80 1E */	slwi r0, r4, 0x10
/* 800E52F0 000E2230  7C 00 1B 78 */	or r0, r0, r3
/* 800E52F4 000E2234  7C 00 D8 40 */	cmplw r0, r27
/* 800E52F8 000E2238  7C 1B 03 78 */	mr r27, r0
/* 800E52FC 000E223C  40 82 FF 90 */	bne .L_800E528C
.L_800E5300:
/* 800E5300 000E2240  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 800E5304 000E2244  38 00 00 01 */	li r0, 1
/* 800E5308 000E2248  3B 63 30 00 */	addi r27, r3, 0xCC003000@l
/* 800E530C 000E224C  94 1B 00 18 */	stwu r0, 0x18(r27)
/* 800E5310 000E2250  48 00 D8 81 */	bl OSGetTime
/* 800E5314 000E2254  38 00 00 00 */	li r0, 0
/* 800E5318 000E2258  3B E4 00 00 */	addi r31, r4, 0
/* 800E531C 000E225C  3B C3 00 00 */	addi r30, r3, 0
/* 800E5320 000E2260  6C 1C 80 00 */	xoris r28, r0, 0x8000
/* 800E5324 000E2264  3B A0 00 32 */	li r29, 0x32
.L_800E5328:
/* 800E5328 000E2268  48 00 D8 69 */	bl OSGetTime
/* 800E532C 000E226C  7C 9F 20 10 */	subfc r4, r31, r4
/* 800E5330 000E2270  7C 1E 19 10 */	subfe r0, r30, r3
/* 800E5334 000E2274  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800E5338 000E2278  7C 04 E8 10 */	subfc r0, r4, r29
/* 800E533C 000E227C  7C 63 E1 10 */	subfe r3, r3, r28
/* 800E5340 000E2280  7C 7C E1 10 */	subfe r3, r28, r28
/* 800E5344 000E2284  7C 63 00 D1 */	neg. r3, r3
/* 800E5348 000E2288  41 82 FF E0 */	beq .L_800E5328
/* 800E534C 000E228C  3B C0 00 00 */	li r30, 0
/* 800E5350 000E2290  93 DB 00 00 */	stw r30, 0(r27)
/* 800E5354 000E2294  48 00 D8 3D */	bl OSGetTime
/* 800E5358 000E2298  3B 84 00 00 */	addi r28, r4, 0
/* 800E535C 000E229C  3B A3 00 00 */	addi r29, r3, 0
/* 800E5360 000E22A0  6F DF 80 00 */	xoris r31, r30, 0x8000
/* 800E5364 000E22A4  3B C0 00 05 */	li r30, 5
.L_800E5368:
/* 800E5368 000E22A8  48 00 D8 29 */	bl OSGetTime
/* 800E536C 000E22AC  7C 9C 20 10 */	subfc r4, r28, r4
/* 800E5370 000E22B0  7C 1D 19 10 */	subfe r0, r29, r3
/* 800E5374 000E22B4  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800E5378 000E22B8  7C 04 F0 10 */	subfc r0, r4, r30
/* 800E537C 000E22BC  7C 63 F9 10 */	subfe r3, r3, r31
/* 800E5380 000E22C0  7C 7F F9 10 */	subfe r3, r31, r31
/* 800E5384 000E22C4  7C 63 00 D1 */	neg. r3, r3
/* 800E5388 000E22C8  41 82 FF E0 */	beq .L_800E5368
/* 800E538C 000E22CC  4B FF ED E9 */	bl __GXCleanGPFifo
/* 800E5390 000E22D0  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 800E5394 000E22D4  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800E5398 000E22D8  38 21 00 28 */	addi r1, r1, 0x28
/* 800E539C 000E22DC  7C 08 03 A6 */	mtlr r0
/* 800E53A0 000E22E0  4E 80 00 20 */	blr 

.global GXSetDrawSync
GXSetDrawSync:
/* 800E53A4 000E22E4  7C 08 02 A6 */	mflr r0
/* 800E53A8 000E22E8  90 01 00 04 */	stw r0, 4(r1)
/* 800E53AC 000E22EC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800E53B0 000E22F0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800E53B4 000E22F4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800E53B8 000E22F8  7C 7E 1B 78 */	mr r30, r3
/* 800E53BC 000E22FC  48 00 98 7D */	bl OSDisableInterrupts
/* 800E53C0 000E2300  38 C0 00 61 */	li r6, 0x61
/* 800E53C4 000E2304  80 82 92 90 */	lwz r4, __GXData@sda21(r2)
/* 800E53C8 000E2308  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 800E53CC 000E230C  57 C0 04 3E */	clrlwi r0, r30, 0x10
/* 800E53D0 000E2310  98 C5 80 00 */	stb r6, 0xCC008000@l(r5)
/* 800E53D4 000E2314  64 07 48 00 */	oris r7, r0, 0x4800
/* 800E53D8 000E2318  90 E5 80 00 */	stw r7, 0xCC008000@l(r5)
/* 800E53DC 000E231C  53 C7 04 3E */	rlwimi r7, r30, 0, 0x10, 0x1f
/* 800E53E0 000E2320  38 00 00 47 */	li r0, 0x47
/* 800E53E4 000E2324  98 C5 80 00 */	stb r6, 0xCC008000@l(r5)
/* 800E53E8 000E2328  50 07 C0 0E */	rlwimi r7, r0, 0x18, 0, 7
/* 800E53EC 000E232C  7C 7E 1B 78 */	mr r30, r3
/* 800E53F0 000E2330  90 E5 80 00 */	stw r7, 0xCC008000@l(r5)
/* 800E53F4 000E2334  80 04 05 AC */	lwz r0, 0x5ac(r4)
/* 800E53F8 000E2338  28 00 00 00 */	cmplwi r0, 0
/* 800E53FC 000E233C  41 82 00 08 */	beq .L_800E5404
/* 800E5400 000E2340  48 00 05 09 */	bl __GXSetDirtyState
.L_800E5404:
/* 800E5404 000E2344  3B E0 00 00 */	li r31, 0
/* 800E5408 000E2348  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800E540C 000E234C  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E5410 000E2350  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E5414 000E2354  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E5418 000E2358  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E541C 000E235C  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E5420 000E2360  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E5424 000E2364  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E5428 000E2368  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E542C 000E236C  4B FE F1 65 */	bl PPCSync
/* 800E5430 000E2370  7F C3 F3 78 */	mr r3, r30
/* 800E5434 000E2374  48 00 98 2D */	bl OSRestoreInterrupts
/* 800E5438 000E2378  80 62 92 90 */	lwz r3, __GXData@sda21(r2)
/* 800E543C 000E237C  B3 E3 00 02 */	sth r31, 2(r3)
/* 800E5440 000E2380  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800E5444 000E2384  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800E5448 000E2388  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800E544C 000E238C  38 21 00 18 */	addi r1, r1, 0x18
/* 800E5450 000E2390  7C 08 03 A6 */	mtlr r0
/* 800E5454 000E2394  4E 80 00 20 */	blr 

.global GXSetDrawDone
GXSetDrawDone:
/* 800E5458 000E2398  7C 08 02 A6 */	mflr r0
/* 800E545C 000E239C  90 01 00 04 */	stw r0, 4(r1)
/* 800E5460 000E23A0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800E5464 000E23A4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800E5468 000E23A8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800E546C 000E23AC  48 00 97 CD */	bl OSDisableInterrupts
/* 800E5470 000E23B0  38 00 00 61 */	li r0, 0x61
/* 800E5474 000E23B4  80 82 92 90 */	lwz r4, __GXData@sda21(r2)
/* 800E5478 000E23B8  3C C0 CC 01 */	lis r6, 0xCC008000@ha
/* 800E547C 000E23BC  3C A0 45 00 */	lis r5, 0x45000002@ha
/* 800E5480 000E23C0  98 06 80 00 */	stb r0, 0xCC008000@l(r6)
/* 800E5484 000E23C4  38 05 00 02 */	addi r0, r5, 0x45000002@l
/* 800E5488 000E23C8  90 06 80 00 */	stw r0, 0xCC008000@l(r6)
/* 800E548C 000E23CC  7C 7E 1B 78 */	mr r30, r3
/* 800E5490 000E23D0  80 04 05 AC */	lwz r0, 0x5ac(r4)
/* 800E5494 000E23D4  28 00 00 00 */	cmplwi r0, 0
/* 800E5498 000E23D8  41 82 00 08 */	beq .L_800E54A0
/* 800E549C 000E23DC  48 00 04 6D */	bl __GXSetDirtyState
.L_800E54A0:
/* 800E54A0 000E23E0  3B E0 00 00 */	li r31, 0
/* 800E54A4 000E23E4  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800E54A8 000E23E8  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54AC 000E23EC  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54B0 000E23F0  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54B4 000E23F4  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54B8 000E23F8  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54BC 000E23FC  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54C0 000E2400  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54C4 000E2404  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800E54C8 000E2408  4B FE F0 C9 */	bl PPCSync
/* 800E54CC 000E240C  9B ED 8F 00 */	stb r31, DrawDone@sda21(r13)
/* 800E54D0 000E2410  7F C3 F3 78 */	mr r3, r30
/* 800E54D4 000E2414  48 00 97 8D */	bl OSRestoreInterrupts
/* 800E54D8 000E2418  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800E54DC 000E241C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800E54E0 000E2420  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800E54E4 000E2424  38 21 00 18 */	addi r1, r1, 0x18
/* 800E54E8 000E2428  7C 08 03 A6 */	mtlr r0
/* 800E54EC 000E242C  4E 80 00 20 */	blr 

.global GXWaitDrawDone
GXWaitDrawDone:
/* 800E54F0 000E2430  7C 08 02 A6 */	mflr r0
/* 800E54F4 000E2434  90 01 00 04 */	stw r0, 4(r1)
/* 800E54F8 000E2438  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800E54FC 000E243C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800E5500 000E2440  48 00 97 39 */	bl OSDisableInterrupts
/* 800E5504 000E2444  7C 7F 1B 78 */	mr r31, r3
/* 800E5508 000E2448  48 00 00 0C */	b .L_800E5514
.L_800E550C:
/* 800E550C 000E244C  38 6D 8F 04 */	addi r3, r13, FinishQueue@sda21
/* 800E5510 000E2450  48 00 D3 DD */	bl OSSleepThread
.L_800E5514:
/* 800E5514 000E2454  88 0D 8F 00 */	lbz r0, DrawDone@sda21(r13)
/* 800E5518 000E2458  28 00 00 00 */	cmplwi r0, 0
/* 800E551C 000E245C  41 82 FF F0 */	beq .L_800E550C
/* 800E5520 000E2460  7F E3 FB 78 */	mr r3, r31
/* 800E5524 000E2464  48 00 97 3D */	bl OSRestoreInterrupts
/* 800E5528 000E2468  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800E552C 000E246C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800E5530 000E2470  38 21 00 10 */	addi r1, r1, 0x10
/* 800E5534 000E2474  7C 08 03 A6 */	mtlr r0
/* 800E5538 000E2478  4E 80 00 20 */	blr 

.global GXDrawDone
GXDrawDone:
/* 800E553C 000E247C  7C 08 02 A6 */	mflr r0
/* 800E5540 000E2480  90 01 00 04 */	stw r0, 4(r1)
/* 800E5544 000E2484  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800E5548 000E2488  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800E554C 000E248C  48 00 96 ED */	bl OSDisableInterrupts
/* 800E5550 000E2490  38 00 00 61 */	li r0, 0x61
/* 800E5554 000E2494  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 800E5558 000E2498  3C 80 45 00 */	lis r4, 0x45000002@ha
/* 800E555C 000E249C  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 800E5560 000E24A0  38 04 00 02 */	addi r0, r4, 0x45000002@l
/* 800E5564 000E24A4  90 05 80 00 */	stw r0, 0xCC008000@l(r5)
/* 800E5568 000E24A8  7C 7F 1B 78 */	mr r31, r3
/* 800E556C 000E24AC  4B FF FB 01 */	bl GXFlush
/* 800E5570 000E24B0  38 00 00 00 */	li r0, 0
/* 800E5574 000E24B4  98 0D 8F 00 */	stb r0, DrawDone@sda21(r13)
/* 800E5578 000E24B8  7F E3 FB 78 */	mr r3, r31
/* 800E557C 000E24BC  48 00 96 E5 */	bl OSRestoreInterrupts
/* 800E5580 000E24C0  48 00 96 B9 */	bl OSDisableInterrupts
/* 800E5584 000E24C4  7C 7F 1B 78 */	mr r31, r3
/* 800E5588 000E24C8  48 00 00 0C */	b .L_800E5594
.L_800E558C:
/* 800E558C 000E24CC  38 6D 8F 04 */	addi r3, r13, FinishQueue@sda21
/* 800E5590 000E24D0  48 00 D3 5D */	bl OSSleepThread
.L_800E5594:
/* 800E5594 000E24D4  88 0D 8F 00 */	lbz r0, DrawDone@sda21(r13)
/* 800E5598 000E24D8  28 00 00 00 */	cmplwi r0, 0
/* 800E559C 000E24DC  41 82 FF F0 */	beq .L_800E558C
/* 800E55A0 000E24E0  7F E3 FB 78 */	mr r3, r31
/* 800E55A4 000E24E4  48 00 96 BD */	bl OSRestoreInterrupts
/* 800E55A8 000E24E8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800E55AC 000E24EC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800E55B0 000E24F0  38 21 00 18 */	addi r1, r1, 0x18
/* 800E55B4 000E24F4  7C 08 03 A6 */	mtlr r0
/* 800E55B8 000E24F8  4E 80 00 20 */	blr 

.global GXPixModeSync
GXPixModeSync:
/* 800E55BC 000E24FC  38 00 00 61 */	li r0, 0x61
/* 800E55C0 000E2500  80 82 92 90 */	lwz r4, __GXData@sda21(r2)
/* 800E55C4 000E2504  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 800E55C8 000E2508  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 800E55CC 000E250C  38 00 00 00 */	li r0, 0
/* 800E55D0 000E2510  80 64 01 DC */	lwz r3, 0x1dc(r4)
/* 800E55D4 000E2514  90 65 80 00 */	stw r3, 0xCC008000@l(r5)
/* 800E55D8 000E2518  B0 04 00 02 */	sth r0, 2(r4)
/* 800E55DC 000E251C  4E 80 00 20 */	blr 

.global GXPokeAlphaMode
GXPokeAlphaMode:
/* 800E55E0 000E2520  80 AD 8E B8 */	lwz r5, __peReg@sda21(r13)
/* 800E55E4 000E2524  54 80 06 3E */	clrlwi r0, r4, 0x18
/* 800E55E8 000E2528  50 60 40 2E */	rlwimi r0, r3, 8, 0, 0x17
/* 800E55EC 000E252C  B0 05 00 06 */	sth r0, 6(r5)
/* 800E55F0 000E2530  4E 80 00 20 */	blr 

.global GXPokeAlphaRead
GXPokeAlphaRead:
/* 800E55F4 000E2534  38 A0 00 00 */	li r5, 0
/* 800E55F8 000E2538  80 8D 8E B8 */	lwz r4, __peReg@sda21(r13)
/* 800E55FC 000E253C  50 65 07 BE */	rlwimi r5, r3, 0, 0x1e, 0x1f
/* 800E5600 000E2540  38 00 00 01 */	li r0, 1
/* 800E5604 000E2544  38 65 00 00 */	addi r3, r5, 0
/* 800E5608 000E2548  50 03 17 7A */	rlwimi r3, r0, 2, 0x1d, 0x1d
/* 800E560C 000E254C  B0 64 00 08 */	sth r3, 8(r4)
/* 800E5610 000E2550  4E 80 00 20 */	blr 

.global GXPokeAlphaUpdate
GXPokeAlphaUpdate:
/* 800E5614 000E2554  80 8D 8E B8 */	lwz r4, __peReg@sda21(r13)
/* 800E5618 000E2558  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 800E561C 000E255C  A0 64 00 02 */	lhz r3, 2(r4)
/* 800E5620 000E2560  50 03 26 F6 */	rlwimi r3, r0, 4, 0x1b, 0x1b
/* 800E5624 000E2564  B0 64 00 02 */	sth r3, 2(r4)
/* 800E5628 000E2568  4E 80 00 20 */	blr 

.global GXPokeBlendMode
GXPokeBlendMode:
/* 800E562C 000E256C  80 ED 8E B8 */	lwz r7, __peReg@sda21(r13)
/* 800E5630 000E2570  2C 03 00 01 */	cmpwi r3, 1
/* 800E5634 000E2574  39 20 00 01 */	li r9, 1
/* 800E5638 000E2578  A1 47 00 02 */	lhz r10, 2(r7)
/* 800E563C 000E257C  41 82 00 10 */	beq .L_800E564C
/* 800E5640 000E2580  2C 03 00 03 */	cmpwi r3, 3
/* 800E5644 000E2584  41 82 00 08 */	beq .L_800E564C
/* 800E5648 000E2588  39 20 00 00 */	li r9, 0
.L_800E564C:
/* 800E564C 000E258C  20 03 00 03 */	subfic r0, r3, 3
/* 800E5650 000E2590  80 ED 8E B8 */	lwz r7, __peReg@sda21(r13)
/* 800E5654 000E2594  7C 08 00 34 */	cntlzw r8, r0
/* 800E5658 000E2598  20 03 00 02 */	subfic r0, r3, 2
/* 800E565C 000E259C  51 2A 07 FE */	rlwimi r10, r9, 0, 0x1f, 0x1f
/* 800E5660 000E25A0  55 03 D9 7E */	srwi r3, r8, 5
/* 800E5664 000E25A4  39 0A 00 00 */	addi r8, r10, 0
/* 800E5668 000E25A8  7C 00 00 34 */	cntlzw r0, r0
/* 800E566C 000E25AC  50 68 5D 28 */	rlwimi r8, r3, 0xb, 0x14, 0x14
/* 800E5670 000E25B0  50 08 E7 BC */	rlwimi r8, r0, 0x1c, 0x1e, 0x1e
/* 800E5674 000E25B4  50 C8 64 26 */	rlwimi r8, r6, 0xc, 0x10, 0x13
/* 800E5678 000E25B8  50 88 45 6E */	rlwimi r8, r4, 8, 0x15, 0x17
/* 800E567C 000E25BC  38 00 00 41 */	li r0, 0x41
/* 800E5680 000E25C0  50 A8 2E 34 */	rlwimi r8, r5, 5, 0x18, 0x1a
/* 800E5684 000E25C4  50 08 C0 0E */	rlwimi r8, r0, 0x18, 0, 7
/* 800E5688 000E25C8  B1 07 00 02 */	sth r8, 2(r7)
/* 800E568C 000E25CC  4E 80 00 20 */	blr 

.global GXPokeColorUpdate
GXPokeColorUpdate:
/* 800E5690 000E25D0  80 8D 8E B8 */	lwz r4, __peReg@sda21(r13)
/* 800E5694 000E25D4  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 800E5698 000E25D8  A0 64 00 02 */	lhz r3, 2(r4)
/* 800E569C 000E25DC  50 03 1F 38 */	rlwimi r3, r0, 3, 0x1c, 0x1c
/* 800E56A0 000E25E0  B0 64 00 02 */	sth r3, 2(r4)
/* 800E56A4 000E25E4  4E 80 00 20 */	blr 

.global GXPokeDstAlpha
GXPokeDstAlpha:
/* 800E56A8 000E25E8  54 80 06 3E */	clrlwi r0, r4, 0x18
/* 800E56AC 000E25EC  80 8D 8E B8 */	lwz r4, __peReg@sda21(r13)
/* 800E56B0 000E25F0  38 A0 00 00 */	li r5, 0
/* 800E56B4 000E25F4  50 05 06 3E */	rlwimi r5, r0, 0, 0x18, 0x1f
/* 800E56B8 000E25F8  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 800E56BC 000E25FC  38 65 00 00 */	addi r3, r5, 0
/* 800E56C0 000E2600  50 03 45 EE */	rlwimi r3, r0, 8, 0x17, 0x17
/* 800E56C4 000E2604  B0 64 00 04 */	sth r3, 4(r4)
/* 800E56C8 000E2608  4E 80 00 20 */	blr 

.global GXPokeDither
GXPokeDither:
/* 800E56CC 000E260C  80 8D 8E B8 */	lwz r4, __peReg@sda21(r13)
/* 800E56D0 000E2610  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 800E56D4 000E2614  A0 64 00 02 */	lhz r3, 2(r4)
/* 800E56D8 000E2618  50 03 17 7A */	rlwimi r3, r0, 2, 0x1d, 0x1d
/* 800E56DC 000E261C  B0 64 00 02 */	sth r3, 2(r4)
/* 800E56E0 000E2620  4E 80 00 20 */	blr 

.global GXPokeZMode
GXPokeZMode:
/* 800E56E4 000E2624  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 800E56E8 000E2628  80 6D 8E B8 */	lwz r3, __peReg@sda21(r13)
/* 800E56EC 000E262C  38 C0 00 00 */	li r6, 0
/* 800E56F0 000E2630  50 06 07 FE */	rlwimi r6, r0, 0, 0x1f, 0x1f
/* 800E56F4 000E2634  50 86 0F 3C */	rlwimi r6, r4, 1, 0x1c, 0x1e
/* 800E56F8 000E2638  50 A6 26 F6 */	rlwimi r6, r5, 4, 0x1b, 0x1b
/* 800E56FC 000E263C  B0 C3 00 00 */	sth r6, 0(r3)
/* 800E5700 000E2640  4E 80 00 20 */	blr 

.global GXSetDrawSyncCallback
GXSetDrawSyncCallback:
/* 800E5704 000E2644  7C 08 02 A6 */	mflr r0
/* 800E5708 000E2648  90 01 00 04 */	stw r0, 4(r1)
/* 800E570C 000E264C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800E5710 000E2650  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800E5714 000E2654  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800E5718 000E2658  7C 7E 1B 78 */	mr r30, r3
/* 800E571C 000E265C  83 ED 8E F8 */	lwz r31, TokenCB@sda21(r13)
/* 800E5720 000E2660  48 00 95 19 */	bl OSDisableInterrupts
/* 800E5724 000E2664  93 CD 8E F8 */	stw r30, TokenCB@sda21(r13)
/* 800E5728 000E2668  48 00 95 39 */	bl OSRestoreInterrupts
/* 800E572C 000E266C  7F E3 FB 78 */	mr r3, r31
/* 800E5730 000E2670  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800E5734 000E2674  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800E5738 000E2678  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800E573C 000E267C  38 21 00 18 */	addi r1, r1, 0x18
/* 800E5740 000E2680  7C 08 03 A6 */	mtlr r0
/* 800E5744 000E2684  4E 80 00 20 */	blr 

GXTokenInterruptHandler:
/* 800E5748 000E2688  7C 08 02 A6 */	mflr r0
/* 800E574C 000E268C  90 01 00 04 */	stw r0, 4(r1)
/* 800E5750 000E2690  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 800E5754 000E2694  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 800E5758 000E2698  93 C1 02 D8 */	stw r30, 0x2d8(r1)
/* 800E575C 000E269C  7C 9E 23 78 */	mr r30, r4
/* 800E5760 000E26A0  80 0D 8E F8 */	lwz r0, TokenCB@sda21(r13)
/* 800E5764 000E26A4  80 6D 8E B8 */	lwz r3, __peReg@sda21(r13)
/* 800E5768 000E26A8  28 00 00 00 */	cmplwi r0, 0
/* 800E576C 000E26AC  A3 E3 00 0E */	lhz r31, 0xe(r3)
/* 800E5770 000E26B0  41 82 00 34 */	beq .L_800E57A4
/* 800E5774 000E26B4  38 61 00 10 */	addi r3, r1, 0x10
/* 800E5778 000E26B8  48 00 79 F5 */	bl OSClearContext
/* 800E577C 000E26BC  38 61 00 10 */	addi r3, r1, 0x10
/* 800E5780 000E26C0  48 00 78 25 */	bl OSSetCurrentContext
/* 800E5784 000E26C4  81 8D 8E F8 */	lwz r12, TokenCB@sda21(r13)
/* 800E5788 000E26C8  38 7F 00 00 */	addi r3, r31, 0
/* 800E578C 000E26CC  7D 88 03 A6 */	mtlr r12
/* 800E5790 000E26D0  4E 80 00 21 */	blrl 
/* 800E5794 000E26D4  38 61 00 10 */	addi r3, r1, 0x10
/* 800E5798 000E26D8  48 00 79 D5 */	bl OSClearContext
/* 800E579C 000E26DC  7F C3 F3 78 */	mr r3, r30
/* 800E57A0 000E26E0  48 00 78 05 */	bl OSSetCurrentContext
.L_800E57A4:
/* 800E57A4 000E26E4  80 6D 8E B8 */	lwz r3, __peReg@sda21(r13)
/* 800E57A8 000E26E8  38 00 00 01 */	li r0, 1
/* 800E57AC 000E26EC  A0 83 00 0A */	lhz r4, 0xa(r3)
/* 800E57B0 000E26F0  50 04 17 7A */	rlwimi r4, r0, 2, 0x1d, 0x1d
/* 800E57B4 000E26F4  B0 83 00 0A */	sth r4, 0xa(r3)
/* 800E57B8 000E26F8  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 800E57BC 000E26FC  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 800E57C0 000E2700  83 C1 02 D8 */	lwz r30, 0x2d8(r1)
/* 800E57C4 000E2704  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 800E57C8 000E2708  7C 08 03 A6 */	mtlr r0
/* 800E57CC 000E270C  4E 80 00 20 */	blr 

.global GXSetDrawDoneCallback
GXSetDrawDoneCallback:
/* 800E57D0 000E2710  7C 08 02 A6 */	mflr r0
/* 800E57D4 000E2714  90 01 00 04 */	stw r0, 4(r1)
/* 800E57D8 000E2718  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800E57DC 000E271C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800E57E0 000E2720  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800E57E4 000E2724  7C 7E 1B 78 */	mr r30, r3
/* 800E57E8 000E2728  83 ED 8E FC */	lwz r31, DrawDoneCB@sda21(r13)
/* 800E57EC 000E272C  48 00 94 4D */	bl OSDisableInterrupts
/* 800E57F0 000E2730  93 CD 8E FC */	stw r30, DrawDoneCB@sda21(r13)
/* 800E57F4 000E2734  48 00 94 6D */	bl OSRestoreInterrupts
/* 800E57F8 000E2738  7F E3 FB 78 */	mr r3, r31
/* 800E57FC 000E273C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800E5800 000E2740  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800E5804 000E2744  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800E5808 000E2748  38 21 00 18 */	addi r1, r1, 0x18
/* 800E580C 000E274C  7C 08 03 A6 */	mtlr r0
/* 800E5810 000E2750  4E 80 00 20 */	blr 

GXFinishInterruptHandler:
/* 800E5814 000E2754  7C 08 02 A6 */	mflr r0
/* 800E5818 000E2758  38 60 00 01 */	li r3, 1
/* 800E581C 000E275C  90 01 00 04 */	stw r0, 4(r1)
/* 800E5820 000E2760  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 800E5824 000E2764  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 800E5828 000E2768  3B E4 00 00 */	addi r31, r4, 0
/* 800E582C 000E276C  80 AD 8E B8 */	lwz r5, __peReg@sda21(r13)
/* 800E5830 000E2770  A0 05 00 0A */	lhz r0, 0xa(r5)
/* 800E5834 000E2774  50 60 1F 38 */	rlwimi r0, r3, 3, 0x1c, 0x1c
/* 800E5838 000E2778  B0 05 00 0A */	sth r0, 0xa(r5)
/* 800E583C 000E277C  80 0D 8E FC */	lwz r0, DrawDoneCB@sda21(r13)
/* 800E5840 000E2780  98 6D 8F 00 */	stb r3, DrawDone@sda21(r13)
/* 800E5844 000E2784  28 00 00 00 */	cmplwi r0, 0
/* 800E5848 000E2788  41 82 00 30 */	beq .L_800E5878
/* 800E584C 000E278C  38 61 00 10 */	addi r3, r1, 0x10
/* 800E5850 000E2790  48 00 79 1D */	bl OSClearContext
/* 800E5854 000E2794  38 61 00 10 */	addi r3, r1, 0x10
/* 800E5858 000E2798  48 00 77 4D */	bl OSSetCurrentContext
/* 800E585C 000E279C  81 8D 8E FC */	lwz r12, DrawDoneCB@sda21(r13)
/* 800E5860 000E27A0  7D 88 03 A6 */	mtlr r12
/* 800E5864 000E27A4  4E 80 00 21 */	blrl 
/* 800E5868 000E27A8  38 61 00 10 */	addi r3, r1, 0x10
/* 800E586C 000E27AC  48 00 79 01 */	bl OSClearContext
/* 800E5870 000E27B0  7F E3 FB 78 */	mr r3, r31
/* 800E5874 000E27B4  48 00 77 31 */	bl OSSetCurrentContext
.L_800E5878:
/* 800E5878 000E27B8  38 6D 8F 04 */	addi r3, r13, FinishQueue@sda21
/* 800E587C 000E27BC  48 00 D1 5D */	bl OSWakeupThread
/* 800E5880 000E27C0  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 800E5884 000E27C4  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 800E5888 000E27C8  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 800E588C 000E27CC  7C 08 03 A6 */	mtlr r0
/* 800E5890 000E27D0  4E 80 00 20 */	blr 

.global __GXPEInit
__GXPEInit:
/* 800E5894 000E27D4  7C 08 02 A6 */	mflr r0
/* 800E5898 000E27D8  3C 60 80 0E */	lis r3, GXTokenInterruptHandler@ha
/* 800E589C 000E27DC  90 01 00 04 */	stw r0, 4(r1)
/* 800E58A0 000E27E0  38 83 57 48 */	addi r4, r3, GXTokenInterruptHandler@l
/* 800E58A4 000E27E4  38 60 00 12 */	li r3, 0x12
/* 800E58A8 000E27E8  94 21 FF F8 */	stwu r1, -8(r1)
/* 800E58AC 000E27EC  48 00 93 D9 */	bl __OSSetInterruptHandler
/* 800E58B0 000E27F0  3C 60 80 0E */	lis r3, GXFinishInterruptHandler@ha
/* 800E58B4 000E27F4  38 83 58 14 */	addi r4, r3, GXFinishInterruptHandler@l
/* 800E58B8 000E27F8  38 60 00 13 */	li r3, 0x13
/* 800E58BC 000E27FC  48 00 93 C9 */	bl __OSSetInterruptHandler
/* 800E58C0 000E2800  38 6D 8F 04 */	addi r3, r13, FinishQueue@sda21
/* 800E58C4 000E2804  48 00 C0 F1 */	bl OSInitThreadQueue
/* 800E58C8 000E2808  38 60 20 00 */	li r3, 0x2000
/* 800E58CC 000E280C  48 00 97 BD */	bl __OSUnmaskInterrupts
/* 800E58D0 000E2810  38 60 10 00 */	li r3, 0x1000
/* 800E58D4 000E2814  48 00 97 B5 */	bl __OSUnmaskInterrupts
/* 800E58D8 000E2818  80 6D 8E B8 */	lwz r3, __peReg@sda21(r13)
/* 800E58DC 000E281C  38 00 00 01 */	li r0, 1
/* 800E58E0 000E2820  A0 83 00 0A */	lhz r4, 0xa(r3)
/* 800E58E4 000E2824  50 04 17 7A */	rlwimi r4, r0, 2, 0x1d, 0x1d
/* 800E58E8 000E2828  50 04 1F 38 */	rlwimi r4, r0, 3, 0x1c, 0x1c
/* 800E58EC 000E282C  50 04 07 FE */	rlwimi r4, r0, 0, 0x1f, 0x1f
/* 800E58F0 000E2830  50 04 0F BC */	rlwimi r4, r0, 1, 0x1e, 0x1e
/* 800E58F4 000E2834  B0 83 00 0A */	sth r4, 0xa(r3)
/* 800E58F8 000E2838  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800E58FC 000E283C  38 21 00 08 */	addi r1, r1, 8
/* 800E5900 000E2840  7C 08 03 A6 */	mtlr r0
/* 800E5904 000E2844  4E 80 00 20 */	blr 
