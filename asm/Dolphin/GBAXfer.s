.include "macros.inc"

.section .text, "ax"  # 0x800056C0 - 0x80472F00
.global __GBAHandler
__GBAHandler:
/* 800FEF58 000FBE98  7C 08 02 A6 */	mflr r0
/* 800FEF5C 000FBE9C  90 01 00 04 */	stw r0, 4(r1)
/* 800FEF60 000FBEA0  94 21 FD 08 */	stwu r1, -0x2f8(r1)
/* 800FEF64 000FBEA4  93 E1 02 F4 */	stw r31, 0x2f4(r1)
/* 800FEF68 000FBEA8  93 C1 02 F0 */	stw r30, 0x2f0(r1)
/* 800FEF6C 000FBEAC  3B C5 00 00 */	addi r30, r5, 0
/* 800FEF70 000FBEB0  93 A1 02 EC */	stw r29, 0x2ec(r1)
/* 800FEF74 000FBEB4  3B A3 00 00 */	addi r29, r3, 0
/* 800FEF78 000FBEB8  3C 60 80 4F */	lis r3, __GBA@ha
/* 800FEF7C 000FBEBC  80 0D 91 9C */	lwz r0, __GBAReset@sda21(r13)
/* 800FEF80 000FBEC0  57 A6 40 2E */	slwi r6, r29, 8
/* 800FEF84 000FBEC4  2C 00 00 00 */	cmpwi r0, 0
/* 800FEF88 000FBEC8  38 03 75 C0 */	addi r0, r3, __GBA@l
/* 800FEF8C 000FBECC  7F E0 32 14 */	add r31, r0, r6
/* 800FEF90 000FBED0  40 82 00 88 */	bne .L_800FF018
/* 800FEF94 000FBED4  54 80 07 3F */	clrlwi. r0, r4, 0x1c
/* 800FEF98 000FBED8  41 82 00 10 */	beq .L_800FEFA8
/* 800FEF9C 000FBEDC  38 00 00 01 */	li r0, 1
/* 800FEFA0 000FBEE0  90 1F 00 20 */	stw r0, 0x20(r31)
/* 800FEFA4 000FBEE4  48 00 00 0C */	b .L_800FEFB0
.L_800FEFA8:
/* 800FEFA8 000FBEE8  38 00 00 00 */	li r0, 0
/* 800FEFAC 000FBEEC  90 1F 00 20 */	stw r0, 0x20(r31)
.L_800FEFB0:
/* 800FEFB0 000FBEF0  81 9F 00 38 */	lwz r12, 0x38(r31)
/* 800FEFB4 000FBEF4  28 0C 00 00 */	cmplwi r12, 0
/* 800FEFB8 000FBEF8  41 82 00 18 */	beq .L_800FEFD0
/* 800FEFBC 000FBEFC  38 00 00 00 */	li r0, 0
/* 800FEFC0 000FBF00  7D 88 03 A6 */	mtlr r12
/* 800FEFC4 000FBF04  90 1F 00 38 */	stw r0, 0x38(r31)
/* 800FEFC8 000FBF08  7F A3 EB 78 */	mr r3, r29
/* 800FEFCC 000FBF0C  4E 80 00 21 */	blrl 
.L_800FEFD0:
/* 800FEFD0 000FBF10  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 800FEFD4 000FBF14  28 00 00 00 */	cmplwi r0, 0
/* 800FEFD8 000FBF18  41 82 00 40 */	beq .L_800FF018
/* 800FEFDC 000FBF1C  38 61 00 18 */	addi r3, r1, 0x18
/* 800FEFE0 000FBF20  4B FE E1 8D */	bl OSClearContext
/* 800FEFE4 000FBF24  38 61 00 18 */	addi r3, r1, 0x18
/* 800FEFE8 000FBF28  4B FE DF BD */	bl OSSetCurrentContext
/* 800FEFEC 000FBF2C  81 9F 00 1C */	lwz r12, 0x1c(r31)
/* 800FEFF0 000FBF30  38 00 00 00 */	li r0, 0
/* 800FEFF4 000FBF34  38 7D 00 00 */	addi r3, r29, 0
/* 800FEFF8 000FBF38  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800FEFFC 000FBF3C  7D 88 03 A6 */	mtlr r12
/* 800FF000 000FBF40  80 9F 00 20 */	lwz r4, 0x20(r31)
/* 800FF004 000FBF44  4E 80 00 21 */	blrl 
/* 800FF008 000FBF48  38 61 00 18 */	addi r3, r1, 0x18
/* 800FF00C 000FBF4C  4B FE E1 61 */	bl OSClearContext
/* 800FF010 000FBF50  7F C3 F3 78 */	mr r3, r30
/* 800FF014 000FBF54  4B FE DF 91 */	bl OSSetCurrentContext
.L_800FF018:
/* 800FF018 000FBF58  80 01 02 FC */	lwz r0, 0x2fc(r1)
/* 800FF01C 000FBF5C  83 E1 02 F4 */	lwz r31, 0x2f4(r1)
/* 800FF020 000FBF60  83 C1 02 F0 */	lwz r30, 0x2f0(r1)
/* 800FF024 000FBF64  83 A1 02 EC */	lwz r29, 0x2ec(r1)
/* 800FF028 000FBF68  38 21 02 F8 */	addi r1, r1, 0x2f8
/* 800FF02C 000FBF6C  7C 08 03 A6 */	mtlr r0
/* 800FF030 000FBF70  4E 80 00 20 */	blr 

.global __GBASyncCallback
__GBASyncCallback:
/* 800FF034 000FBF74  7C 08 02 A6 */	mflr r0
/* 800FF038 000FBF78  3C 80 80 4F */	lis r4, __GBA@ha
/* 800FF03C 000FBF7C  90 01 00 04 */	stw r0, 4(r1)
/* 800FF040 000FBF80  54 63 40 2E */	slwi r3, r3, 8
/* 800FF044 000FBF84  38 04 75 C0 */	addi r0, r4, __GBA@l
/* 800FF048 000FBF88  7C 60 1A 14 */	add r3, r0, r3
/* 800FF04C 000FBF8C  94 21 FF F8 */	stwu r1, -8(r1)
/* 800FF050 000FBF90  38 63 00 24 */	addi r3, r3, 0x24
/* 800FF054 000FBF94  4B FF 39 85 */	bl OSWakeupThread
/* 800FF058 000FBF98  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800FF05C 000FBF9C  38 21 00 08 */	addi r1, r1, 8
/* 800FF060 000FBFA0  7C 08 03 A6 */	mtlr r0
/* 800FF064 000FBFA4  4E 80 00 20 */	blr 

.global __GBASync
__GBASync:
/* 800FF068 000FBFA8  7C 08 02 A6 */	mflr r0
/* 800FF06C 000FBFAC  3C 80 80 4F */	lis r4, __GBA@ha
/* 800FF070 000FBFB0  90 01 00 04 */	stw r0, 4(r1)
/* 800FF074 000FBFB4  54 63 40 2E */	slwi r3, r3, 8
/* 800FF078 000FBFB8  38 04 75 C0 */	addi r0, r4, __GBA@l
/* 800FF07C 000FBFBC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800FF080 000FBFC0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800FF084 000FBFC4  7F E0 1A 14 */	add r31, r0, r3
/* 800FF088 000FBFC8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800FF08C 000FBFCC  4B FE FB AD */	bl OSDisableInterrupts
/* 800FF090 000FBFD0  7C 7E 1B 78 */	mr r30, r3
/* 800FF094 000FBFD4  48 00 00 0C */	b .L_800FF0A0
.L_800FF098:
/* 800FF098 000FBFD8  38 7F 00 24 */	addi r3, r31, 0x24
/* 800FF09C 000FBFDC  4B FF 38 51 */	bl OSSleepThread
.L_800FF0A0:
/* 800FF0A0 000FBFE0  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 800FF0A4 000FBFE4  28 00 00 00 */	cmplwi r0, 0
/* 800FF0A8 000FBFE8  40 82 FF F0 */	bne .L_800FF098
/* 800FF0AC 000FBFEC  83 FF 00 20 */	lwz r31, 0x20(r31)
/* 800FF0B0 000FBFF0  7F C3 F3 78 */	mr r3, r30
/* 800FF0B4 000FBFF4  4B FE FB AD */	bl OSRestoreInterrupts
/* 800FF0B8 000FBFF8  7F E3 FB 78 */	mr r3, r31
/* 800FF0BC 000FBFFC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800FF0C0 000FC000  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800FF0C4 000FC004  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800FF0C8 000FC008  38 21 00 18 */	addi r1, r1, 0x18
/* 800FF0CC 000FC00C  7C 08 03 A6 */	mtlr r0
/* 800FF0D0 000FC010  4E 80 00 20 */	blr 

.global TypeAndStatusCallback
TypeAndStatusCallback:
/* 800FF0D4 000FC014  7C 08 02 A6 */	mflr r0
/* 800FF0D8 000FC018  90 01 00 04 */	stw r0, 4(r1)
/* 800FF0DC 000FC01C  94 21 FD 10 */	stwu r1, -0x2f0(r1)
/* 800FF0E0 000FC020  93 E1 02 EC */	stw r31, 0x2ec(r1)
/* 800FF0E4 000FC024  3B E3 00 00 */	addi r31, r3, 0
/* 800FF0E8 000FC028  3C 60 80 4F */	lis r3, __GBA@ha
/* 800FF0EC 000FC02C  93 C1 02 E8 */	stw r30, 0x2e8(r1)
/* 800FF0F0 000FC030  57 E5 40 2E */	slwi r5, r31, 8
/* 800FF0F4 000FC034  93 A1 02 E4 */	stw r29, 0x2e4(r1)
/* 800FF0F8 000FC038  80 0D 91 9C */	lwz r0, __GBAReset@sda21(r13)
/* 800FF0FC 000FC03C  2C 00 00 00 */	cmpwi r0, 0
/* 800FF100 000FC040  38 03 75 C0 */	addi r0, r3, __GBA@l
/* 800FF104 000FC044  7F C0 2A 14 */	add r30, r0, r5
/* 800FF108 000FC048  40 82 00 D4 */	bne .L_800FF1DC
/* 800FF10C 000FC04C  54 80 06 3F */	clrlwi. r0, r4, 0x18
/* 800FF110 000FC050  40 82 00 14 */	bne .L_800FF124
/* 800FF114 000FC054  54 83 00 1E */	rlwinm r3, r4, 0, 0, 0xf
/* 800FF118 000FC058  3C 03 FF FC */	addis r0, r3, 0xfffc
/* 800FF11C 000FC05C  28 00 00 00 */	cmplwi r0, 0
/* 800FF120 000FC060  41 82 00 10 */	beq .L_800FF130
.L_800FF124:
/* 800FF124 000FC064  38 00 00 01 */	li r0, 1
/* 800FF128 000FC068  90 1E 00 20 */	stw r0, 0x20(r30)
/* 800FF12C 000FC06C  48 00 00 3C */	b .L_800FF168
.L_800FF130:
/* 800FF130 000FC070  3C 60 80 10 */	lis r3, __GBAHandler@ha
/* 800FF134 000FC074  80 BE 00 0C */	lwz r5, 0xc(r30)
/* 800FF138 000FC078  39 03 EF 58 */	addi r8, r3, __GBAHandler@l
/* 800FF13C 000FC07C  80 FE 00 10 */	lwz r7, 0x10(r30)
/* 800FF140 000FC080  81 3E 00 30 */	lwz r9, 0x30(r30)
/* 800FF144 000FC084  7F E3 FB 78 */	mr r3, r31
/* 800FF148 000FC088  81 5E 00 34 */	lwz r10, 0x34(r30)
/* 800FF14C 000FC08C  38 9E 00 00 */	addi r4, r30, 0
/* 800FF150 000FC090  38 DE 00 05 */	addi r6, r30, 5
/* 800FF154 000FC094  4B FF 6D 95 */	bl SITransfer
/* 800FF158 000FC098  2C 03 00 00 */	cmpwi r3, 0
/* 800FF15C 000FC09C  40 82 00 80 */	bne .L_800FF1DC
/* 800FF160 000FC0A0  38 00 00 02 */	li r0, 2
/* 800FF164 000FC0A4  90 1E 00 20 */	stw r0, 0x20(r30)
.L_800FF168:
/* 800FF168 000FC0A8  81 9E 00 38 */	lwz r12, 0x38(r30)
/* 800FF16C 000FC0AC  28 0C 00 00 */	cmplwi r12, 0
/* 800FF170 000FC0B0  41 82 00 18 */	beq .L_800FF188
/* 800FF174 000FC0B4  38 00 00 00 */	li r0, 0
/* 800FF178 000FC0B8  7D 88 03 A6 */	mtlr r12
/* 800FF17C 000FC0BC  90 1E 00 38 */	stw r0, 0x38(r30)
/* 800FF180 000FC0C0  7F E3 FB 78 */	mr r3, r31
/* 800FF184 000FC0C4  4E 80 00 21 */	blrl 
.L_800FF188:
/* 800FF188 000FC0C8  80 1E 00 1C */	lwz r0, 0x1c(r30)
/* 800FF18C 000FC0CC  28 00 00 00 */	cmplwi r0, 0
/* 800FF190 000FC0D0  41 82 00 4C */	beq .L_800FF1DC
/* 800FF194 000FC0D4  4B FE DE 6D */	bl OSGetCurrentContext
/* 800FF198 000FC0D8  3B A3 00 00 */	addi r29, r3, 0
/* 800FF19C 000FC0DC  38 61 00 10 */	addi r3, r1, 0x10
/* 800FF1A0 000FC0E0  4B FE DF CD */	bl OSClearContext
/* 800FF1A4 000FC0E4  38 61 00 10 */	addi r3, r1, 0x10
/* 800FF1A8 000FC0E8  4B FE DD FD */	bl OSSetCurrentContext
/* 800FF1AC 000FC0EC  81 9E 00 1C */	lwz r12, 0x1c(r30)
/* 800FF1B0 000FC0F0  38 00 00 00 */	li r0, 0
/* 800FF1B4 000FC0F4  38 7F 00 00 */	addi r3, r31, 0
/* 800FF1B8 000FC0F8  90 1E 00 1C */	stw r0, 0x1c(r30)
/* 800FF1BC 000FC0FC  7D 88 03 A6 */	mtlr r12
/* 800FF1C0 000FC100  80 9E 00 20 */	lwz r4, 0x20(r30)
/* 800FF1C4 000FC104  4E 80 00 21 */	blrl 
/* 800FF1C8 000FC108  38 61 00 10 */	addi r3, r1, 0x10
/* 800FF1CC 000FC10C  4B FE DF A1 */	bl OSClearContext
/* 800FF1D0 000FC110  7F A3 EB 78 */	mr r3, r29
/* 800FF1D4 000FC114  4B FE DD D1 */	bl OSSetCurrentContext
/* 800FF1D8 000FC118  4B FF 2D 89 */	bl __OSReschedule
.L_800FF1DC:
/* 800FF1DC 000FC11C  80 01 02 F4 */	lwz r0, 0x2f4(r1)
/* 800FF1E0 000FC120  83 E1 02 EC */	lwz r31, 0x2ec(r1)
/* 800FF1E4 000FC124  83 C1 02 E8 */	lwz r30, 0x2e8(r1)
/* 800FF1E8 000FC128  83 A1 02 E4 */	lwz r29, 0x2e4(r1)
/* 800FF1EC 000FC12C  38 21 02 F0 */	addi r1, r1, 0x2f0
/* 800FF1F0 000FC130  7C 08 03 A6 */	mtlr r0
/* 800FF1F4 000FC134  4E 80 00 20 */	blr 

.global __GBATransfer
__GBATransfer:
/* 800FF1F8 000FC138  7C 08 02 A6 */	mflr r0
/* 800FF1FC 000FC13C  90 01 00 04 */	stw r0, 4(r1)
/* 800FF200 000FC140  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800FF204 000FC144  BF 61 00 1C */	stmw r27, 0x1c(r1)
/* 800FF208 000FC148  3B 63 00 00 */	addi r27, r3, 0
/* 800FF20C 000FC14C  3C 60 80 4F */	lis r3, __GBA@ha
/* 800FF210 000FC150  57 67 40 2E */	slwi r7, r27, 8
/* 800FF214 000FC154  38 03 75 C0 */	addi r0, r3, __GBA@l
/* 800FF218 000FC158  3B 84 00 00 */	addi r28, r4, 0
/* 800FF21C 000FC15C  3B A5 00 00 */	addi r29, r5, 0
/* 800FF220 000FC160  3B E6 00 00 */	addi r31, r6, 0
/* 800FF224 000FC164  7F C0 3A 14 */	add r30, r0, r7
/* 800FF228 000FC168  4B FE FA 11 */	bl OSDisableInterrupts
/* 800FF22C 000FC16C  93 FE 00 38 */	stw r31, 0x38(r30)
/* 800FF230 000FC170  3C 80 80 10 */	lis r4, TypeAndStatusCallback@ha
/* 800FF234 000FC174  3B E3 00 00 */	addi r31, r3, 0
/* 800FF238 000FC178  93 9E 00 0C */	stw r28, 0xc(r30)
/* 800FF23C 000FC17C  38 84 F0 D4 */	addi r4, r4, TypeAndStatusCallback@l
/* 800FF240 000FC180  7F 63 DB 78 */	mr r3, r27
/* 800FF244 000FC184  93 BE 00 10 */	stw r29, 0x10(r30)
/* 800FF248 000FC188  4B FF 72 69 */	bl SIGetTypeAsync
/* 800FF24C 000FC18C  7F E3 FB 78 */	mr r3, r31
/* 800FF250 000FC190  4B FE FA 11 */	bl OSRestoreInterrupts
/* 800FF254 000FC194  BB 61 00 1C */	lmw r27, 0x1c(r1)
/* 800FF258 000FC198  38 60 00 00 */	li r3, 0
/* 800FF25C 000FC19C  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800FF260 000FC1A0  38 21 00 30 */	addi r1, r1, 0x30
/* 800FF264 000FC1A4  7C 08 03 A6 */	mtlr r0
/* 800FF268 000FC1A8  4E 80 00 20 */	blr 
