.include "macros.inc"
.section .bss  # 0x804EFC20 - 0x8051467C
.balign 8
.global RunQueue
RunQueue:
	.skip 0x100
.balign 8
.global IdleThread
IdleThread:
	.skip 0x318
.balign 8
.global DefaultThread
DefaultThread:
	.skip 0x318
.balign 8
.global IdleContext
IdleContext:
	.skip 0x2C8

.section .sdata, "wa"  # 0x80514680 - 0x80514D80
.balign 8
SwitchThreadCallback:
	.4byte DefaultSwitchThreadCallback

.section .sbss # 0x80514D80 - 0x80516360
.balign 8
RunQueueBits:
	.skip 4
RunQueueHint:
	.skip 4
Reschedule:
	.skip 4

.section .text, "ax"  # 0x800056C0 - 0x80472F00
DefaultSwitchThreadCallback:
/* 800F1858 000EE798  4E 80 00 20 */	blr 

.global __OSThreadInit
__OSThreadInit:
/* 800F185C 000EE79C  7C 08 02 A6 */	mflr r0
/* 800F1860 000EE7A0  3C 60 80 4F */	lis r3, RunQueue@ha
/* 800F1864 000EE7A4  90 01 00 04 */	stw r0, 4(r1)
/* 800F1868 000EE7A8  38 00 00 02 */	li r0, 2
/* 800F186C 000EE7AC  38 80 00 10 */	li r4, 0x10
/* 800F1870 000EE7B0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F1874 000EE7B4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F1878 000EE7B8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800F187C 000EE7BC  93 A1 00 0C */	stw r29, 0xc(r1)
/* 800F1880 000EE7C0  3B A0 00 00 */	li r29, 0
/* 800F1884 000EE7C4  93 81 00 08 */	stw r28, 8(r1)
/* 800F1888 000EE7C8  3B 83 67 38 */	addi r28, r3, RunQueue@l
/* 800F188C 000EE7CC  3B FC 04 18 */	addi r31, r28, 0x418
/* 800F1890 000EE7D0  B0 1C 06 E0 */	sth r0, 0x6e0(r28)
/* 800F1894 000EE7D4  38 00 00 01 */	li r0, 1
/* 800F1898 000EE7D8  38 7F 02 E8 */	addi r3, r31, 0x2e8
/* 800F189C 000EE7DC  B0 1C 06 E2 */	sth r0, 0x6e2(r28)
/* 800F18A0 000EE7E0  38 00 FF FF */	li r0, -1
/* 800F18A4 000EE7E4  90 9C 06 EC */	stw r4, 0x6ec(r28)
/* 800F18A8 000EE7E8  90 9C 06 E8 */	stw r4, 0x6e8(r28)
/* 800F18AC 000EE7EC  93 BC 06 E4 */	stw r29, 0x6e4(r28)
/* 800F18B0 000EE7F0  90 1C 06 F0 */	stw r0, 0x6f0(r28)
/* 800F18B4 000EE7F4  93 BC 07 08 */	stw r29, 0x708(r28)
/* 800F18B8 000EE7F8  48 00 00 FD */	bl OSInitThreadQueue
/* 800F18BC 000EE7FC  93 BC 07 10 */	stw r29, 0x710(r28)
/* 800F18C0 000EE800  3F C0 80 00 */	lis r30, 0x800000D8@ha
/* 800F18C4 000EE804  38 7F 00 00 */	addi r3, r31, 0
/* 800F18C8 000EE808  93 BC 07 0C */	stw r29, 0x70c(r28)
/* 800F18CC 000EE80C  93 FE 00 D8 */	stw r31, 0x800000D8@l(r30)
/* 800F18D0 000EE810  4B FF B8 9D */	bl OSClearContext
/* 800F18D4 000EE814  7F E3 FB 78 */	mr r3, r31
/* 800F18D8 000EE818  4B FF B6 CD */	bl OSSetCurrentContext
/* 800F18DC 000EE81C  3C 60 80 53 */	lis r3, _stack_addr@ha
/* 800F18E0 000EE820  38 03 0E D8 */	addi r0, r3, _stack_addr@l
/* 800F18E4 000EE824  3C 60 80 52 */	lis r3, _stack_end@ha
/* 800F18E8 000EE828  90 1C 07 1C */	stw r0, 0x71c(r28)
/* 800F18EC 000EE82C  38 03 0E D8 */	addi r0, r3, _stack_end@l
/* 800F18F0 000EE830  90 1C 07 20 */	stw r0, 0x720(r28)
/* 800F18F4 000EE834  3C 60 DE AE */	lis r3, 0xDEADBABE@ha
/* 800F18F8 000EE838  38 03 BA BE */	addi r0, r3, 0xDEADBABE@l
/* 800F18FC 000EE83C  80 7C 07 20 */	lwz r3, 0x720(r28)
/* 800F1900 000EE840  7F E4 FB 78 */	mr r4, r31
/* 800F1904 000EE844  90 03 00 00 */	stw r0, 0(r3)
/* 800F1908 000EE848  81 8D 83 78 */	lwz r12, SwitchThreadCallback@sda21(r13)
/* 800F190C 000EE84C  80 7E 00 E4 */	lwz r3, 0xe4(r30)
/* 800F1910 000EE850  7D 88 03 A6 */	mtlr r12
/* 800F1914 000EE854  4E 80 00 21 */	blrl 
/* 800F1918 000EE858  93 FE 00 E4 */	stw r31, 0xe4(r30)
/* 800F191C 000EE85C  38 60 00 00 */	li r3, 0
/* 800F1920 000EE860  48 00 11 C5 */	bl OSClearStack
/* 800F1924 000EE864  93 AD 8F D8 */	stw r29, RunQueueBits@sda21(r13)
/* 800F1928 000EE868  3B C0 00 00 */	li r30, 0
/* 800F192C 000EE86C  57 C0 18 38 */	slwi r0, r30, 3
/* 800F1930 000EE870  93 AD 8F DC */	stw r29, RunQueueHint@sda21(r13)
/* 800F1934 000EE874  7F BC 02 14 */	add r29, r28, r0
.L_800F1938:
/* 800F1938 000EE878  7F A3 EB 78 */	mr r3, r29
/* 800F193C 000EE87C  48 00 00 79 */	bl OSInitThreadQueue
/* 800F1940 000EE880  3B DE 00 01 */	addi r30, r30, 1
/* 800F1944 000EE884  2C 1E 00 1F */	cmpwi r30, 0x1f
/* 800F1948 000EE888  3B BD 00 08 */	addi r29, r29, 8
/* 800F194C 000EE88C  40 81 FF EC */	ble .L_800F1938
/* 800F1950 000EE890  3F C0 80 00 */	lis r30, 0x800000DC@ha
/* 800F1954 000EE894  38 7E 00 DC */	addi r3, r30, 0x800000DC@l
/* 800F1958 000EE898  48 00 00 5D */	bl OSInitThreadQueue
/* 800F195C 000EE89C  38 9E 00 DC */	addi r4, r30, 0xdc
/* 800F1960 000EE8A0  84 64 00 04 */	lwzu r3, 4(r4)
/* 800F1964 000EE8A4  28 03 00 00 */	cmplwi r3, 0
/* 800F1968 000EE8A8  40 82 00 0C */	bne .L_800F1974
/* 800F196C 000EE8AC  93 FE 00 DC */	stw r31, 0xdc(r30)
/* 800F1970 000EE8B0  48 00 00 08 */	b .L_800F1978
.L_800F1974:
/* 800F1974 000EE8B4  93 E3 02 FC */	stw r31, 0x2fc(r3)
.L_800F1978:
/* 800F1978 000EE8B8  90 7F 03 00 */	stw r3, 0x300(r31)
/* 800F197C 000EE8BC  3B C0 00 00 */	li r30, 0
/* 800F1980 000EE8C0  38 7C 07 30 */	addi r3, r28, 0x730
/* 800F1984 000EE8C4  93 DF 02 FC */	stw r30, 0x2fc(r31)
/* 800F1988 000EE8C8  93 E4 00 00 */	stw r31, 0(r4)
/* 800F198C 000EE8CC  4B FF B7 E1 */	bl OSClearContext
/* 800F1990 000EE8D0  93 CD 8F E0 */	stw r30, Reschedule@sda21(r13)
/* 800F1994 000EE8D4  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F1998 000EE8D8  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F199C 000EE8DC  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800F19A0 000EE8E0  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 800F19A4 000EE8E4  83 81 00 08 */	lwz r28, 8(r1)
/* 800F19A8 000EE8E8  38 21 00 18 */	addi r1, r1, 0x18
/* 800F19AC 000EE8EC  7C 08 03 A6 */	mtlr r0
/* 800F19B0 000EE8F0  4E 80 00 20 */	blr 

.global OSInitThreadQueue
OSInitThreadQueue:
/* 800F19B4 000EE8F4  38 00 00 00 */	li r0, 0
/* 800F19B8 000EE8F8  90 03 00 04 */	stw r0, 4(r3)
/* 800F19BC 000EE8FC  90 03 00 00 */	stw r0, 0(r3)
/* 800F19C0 000EE900  4E 80 00 20 */	blr 

.global OSGetCurrentThread
OSGetCurrentThread:
/* 800F19C4 000EE904  3C 60 80 00 */	lis r3, 0x800000E4@ha
/* 800F19C8 000EE908  80 63 00 E4 */	lwz r3, 0x800000E4@l(r3)
/* 800F19CC 000EE90C  4E 80 00 20 */	blr 

.global OSIsThreadTerminated
OSIsThreadTerminated:
/* 800F19D0 000EE910  A0 63 02 C8 */	lhz r3, 0x2c8(r3)
/* 800F19D4 000EE914  38 00 00 01 */	li r0, 1
/* 800F19D8 000EE918  28 03 00 08 */	cmplwi r3, 8
/* 800F19DC 000EE91C  41 82 00 10 */	beq .L_800F19EC
/* 800F19E0 000EE920  28 03 00 00 */	cmplwi r3, 0
/* 800F19E4 000EE924  41 82 00 08 */	beq .L_800F19EC
/* 800F19E8 000EE928  38 00 00 00 */	li r0, 0
.L_800F19EC:
/* 800F19EC 000EE92C  2C 00 00 00 */	cmpwi r0, 0
/* 800F19F0 000EE930  41 82 00 0C */	beq .L_800F19FC
/* 800F19F4 000EE934  38 60 00 01 */	li r3, 1
/* 800F19F8 000EE938  4E 80 00 20 */	blr 
.L_800F19FC:
/* 800F19FC 000EE93C  38 60 00 00 */	li r3, 0
/* 800F1A00 000EE940  4E 80 00 20 */	blr 

.global OSDisableScheduler
OSDisableScheduler:
/* 800F1A04 000EE944  7C 08 02 A6 */	mflr r0
/* 800F1A08 000EE948  90 01 00 04 */	stw r0, 4(r1)
/* 800F1A0C 000EE94C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F1A10 000EE950  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F1A14 000EE954  4B FF D2 25 */	bl OSDisableInterrupts
/* 800F1A18 000EE958  80 8D 8F E0 */	lwz r4, Reschedule@sda21(r13)
/* 800F1A1C 000EE95C  38 04 00 01 */	addi r0, r4, 1
/* 800F1A20 000EE960  90 0D 8F E0 */	stw r0, Reschedule@sda21(r13)
/* 800F1A24 000EE964  7C 9F 23 78 */	mr r31, r4
/* 800F1A28 000EE968  4B FF D2 39 */	bl OSRestoreInterrupts
/* 800F1A2C 000EE96C  7F E3 FB 78 */	mr r3, r31
/* 800F1A30 000EE970  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F1A34 000EE974  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F1A38 000EE978  38 21 00 10 */	addi r1, r1, 0x10
/* 800F1A3C 000EE97C  7C 08 03 A6 */	mtlr r0
/* 800F1A40 000EE980  4E 80 00 20 */	blr 

.global OSEnableScheduler
OSEnableScheduler:
/* 800F1A44 000EE984  7C 08 02 A6 */	mflr r0
/* 800F1A48 000EE988  90 01 00 04 */	stw r0, 4(r1)
/* 800F1A4C 000EE98C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F1A50 000EE990  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F1A54 000EE994  4B FF D1 E5 */	bl OSDisableInterrupts
/* 800F1A58 000EE998  80 8D 8F E0 */	lwz r4, Reschedule@sda21(r13)
/* 800F1A5C 000EE99C  38 04 FF FF */	addi r0, r4, -1
/* 800F1A60 000EE9A0  90 0D 8F E0 */	stw r0, Reschedule@sda21(r13)
/* 800F1A64 000EE9A4  7C 9F 23 78 */	mr r31, r4
/* 800F1A68 000EE9A8  4B FF D1 F9 */	bl OSRestoreInterrupts
/* 800F1A6C 000EE9AC  7F E3 FB 78 */	mr r3, r31
/* 800F1A70 000EE9B0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F1A74 000EE9B4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F1A78 000EE9B8  38 21 00 10 */	addi r1, r1, 0x10
/* 800F1A7C 000EE9BC  7C 08 03 A6 */	mtlr r0
/* 800F1A80 000EE9C0  4E 80 00 20 */	blr 

UnsetRun:
/* 800F1A84 000EE9C4  80 83 02 E0 */	lwz r4, 0x2e0(r3)
/* 800F1A88 000EE9C8  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 800F1A8C 000EE9CC  28 04 00 00 */	cmplwi r4, 0
/* 800F1A90 000EE9D0  80 C3 02 E4 */	lwz r6, 0x2e4(r3)
/* 800F1A94 000EE9D4  40 82 00 0C */	bne .L_800F1AA0
/* 800F1A98 000EE9D8  90 C5 00 04 */	stw r6, 4(r5)
/* 800F1A9C 000EE9DC  48 00 00 08 */	b .L_800F1AA4
.L_800F1AA0:
/* 800F1AA0 000EE9E0  90 C4 02 E4 */	stw r6, 0x2e4(r4)
.L_800F1AA4:
/* 800F1AA4 000EE9E4  28 06 00 00 */	cmplwi r6, 0
/* 800F1AA8 000EE9E8  40 82 00 0C */	bne .L_800F1AB4
/* 800F1AAC 000EE9EC  90 85 00 00 */	stw r4, 0(r5)
/* 800F1AB0 000EE9F0  48 00 00 08 */	b .L_800F1AB8
.L_800F1AB4:
/* 800F1AB4 000EE9F4  90 86 02 E0 */	stw r4, 0x2e0(r6)
.L_800F1AB8:
/* 800F1AB8 000EE9F8  80 05 00 00 */	lwz r0, 0(r5)
/* 800F1ABC 000EE9FC  28 00 00 00 */	cmplwi r0, 0
/* 800F1AC0 000EEA00  40 82 00 20 */	bne .L_800F1AE0
/* 800F1AC4 000EEA04  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F1AC8 000EEA08  38 80 00 01 */	li r4, 1
/* 800F1ACC 000EEA0C  80 AD 8F D8 */	lwz r5, RunQueueBits@sda21(r13)
/* 800F1AD0 000EEA10  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F1AD4 000EEA14  7C 80 00 30 */	slw r0, r4, r0
/* 800F1AD8 000EEA18  7C A0 00 78 */	andc r0, r5, r0
/* 800F1ADC 000EEA1C  90 0D 8F D8 */	stw r0, RunQueueBits@sda21(r13)
.L_800F1AE0:
/* 800F1AE0 000EEA20  38 00 00 00 */	li r0, 0
/* 800F1AE4 000EEA24  90 03 02 DC */	stw r0, 0x2dc(r3)
/* 800F1AE8 000EEA28  4E 80 00 20 */	blr 

.global __OSGetEffectivePriority
__OSGetEffectivePriority:
/* 800F1AEC 000EEA2C  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 800F1AF0 000EEA30  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 800F1AF4 000EEA34  48 00 00 24 */	b .L_800F1B18
.L_800F1AF8:
/* 800F1AF8 000EEA38  80 65 00 00 */	lwz r3, 0(r5)
/* 800F1AFC 000EEA3C  28 03 00 00 */	cmplwi r3, 0
/* 800F1B00 000EEA40  41 82 00 14 */	beq .L_800F1B14
/* 800F1B04 000EEA44  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F1B08 000EEA48  7C 00 20 00 */	cmpw r0, r4
/* 800F1B0C 000EEA4C  40 80 00 08 */	bge .L_800F1B14
/* 800F1B10 000EEA50  7C 04 03 78 */	mr r4, r0
.L_800F1B14:
/* 800F1B14 000EEA54  80 A5 00 10 */	lwz r5, 0x10(r5)
.L_800F1B18:
/* 800F1B18 000EEA58  28 05 00 00 */	cmplwi r5, 0
/* 800F1B1C 000EEA5C  40 82 FF DC */	bne .L_800F1AF8
/* 800F1B20 000EEA60  7C 83 23 78 */	mr r3, r4
/* 800F1B24 000EEA64  4E 80 00 20 */	blr 

SetEffectivePriority:
/* 800F1B28 000EEA68  7C 08 02 A6 */	mflr r0
/* 800F1B2C 000EEA6C  90 01 00 04 */	stw r0, 4(r1)
/* 800F1B30 000EEA70  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F1B34 000EEA74  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F1B38 000EEA78  7C 7F 1B 78 */	mr r31, r3
/* 800F1B3C 000EEA7C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800F1B40 000EEA80  3B C4 00 00 */	addi r30, r4, 0
/* 800F1B44 000EEA84  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 800F1B48 000EEA88  2C 00 00 03 */	cmpwi r0, 3
/* 800F1B4C 000EEA8C  41 82 01 80 */	beq .L_800F1CCC
/* 800F1B50 000EEA90  40 80 00 14 */	bge .L_800F1B64
/* 800F1B54 000EEA94  2C 00 00 01 */	cmpwi r0, 1
/* 800F1B58 000EEA98  41 82 00 18 */	beq .L_800F1B70
/* 800F1B5C 000EEA9C  40 80 01 64 */	bge .L_800F1CC0
/* 800F1B60 000EEAA0  48 00 01 6C */	b .L_800F1CCC
.L_800F1B64:
/* 800F1B64 000EEAA4  2C 00 00 05 */	cmpwi r0, 5
/* 800F1B68 000EEAA8  40 80 01 64 */	bge .L_800F1CCC
/* 800F1B6C 000EEAAC  48 00 00 7C */	b .L_800F1BE8
.L_800F1B70:
/* 800F1B70 000EEAB0  7F E3 FB 78 */	mr r3, r31
/* 800F1B74 000EEAB4  4B FF FF 11 */	bl UnsetRun
/* 800F1B78 000EEAB8  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 800F1B7C 000EEABC  3C 60 80 4F */	lis r3, RunQueue@ha
/* 800F1B80 000EEAC0  38 03 67 38 */	addi r0, r3, RunQueue@l
/* 800F1B84 000EEAC4  80 7F 02 D0 */	lwz r3, 0x2d0(r31)
/* 800F1B88 000EEAC8  54 63 18 38 */	slwi r3, r3, 3
/* 800F1B8C 000EEACC  7C 00 1A 14 */	add r0, r0, r3
/* 800F1B90 000EEAD0  90 1F 02 DC */	stw r0, 0x2dc(r31)
/* 800F1B94 000EEAD4  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 800F1B98 000EEAD8  80 64 00 04 */	lwz r3, 4(r4)
/* 800F1B9C 000EEADC  28 03 00 00 */	cmplwi r3, 0
/* 800F1BA0 000EEAE0  40 82 00 0C */	bne .L_800F1BAC
/* 800F1BA4 000EEAE4  93 E4 00 00 */	stw r31, 0(r4)
/* 800F1BA8 000EEAE8  48 00 00 08 */	b .L_800F1BB0
.L_800F1BAC:
/* 800F1BAC 000EEAEC  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_800F1BB0:
/* 800F1BB0 000EEAF0  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 800F1BB4 000EEAF4  38 00 00 00 */	li r0, 0
/* 800F1BB8 000EEAF8  38 60 00 01 */	li r3, 1
/* 800F1BBC 000EEAFC  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 800F1BC0 000EEB00  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 800F1BC4 000EEB04  93 E4 00 04 */	stw r31, 4(r4)
/* 800F1BC8 000EEB08  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 800F1BCC 000EEB0C  80 8D 8F D8 */	lwz r4, RunQueueBits@sda21(r13)
/* 800F1BD0 000EEB10  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F1BD4 000EEB14  7C 60 00 30 */	slw r0, r3, r0
/* 800F1BD8 000EEB18  7C 80 03 78 */	or r0, r4, r0
/* 800F1BDC 000EEB1C  90 0D 8F D8 */	stw r0, RunQueueBits@sda21(r13)
/* 800F1BE0 000EEB20  90 6D 8F DC */	stw r3, RunQueueHint@sda21(r13)
/* 800F1BE4 000EEB24  48 00 00 E8 */	b .L_800F1CCC
.L_800F1BE8:
/* 800F1BE8 000EEB28  80 9F 02 E0 */	lwz r4, 0x2e0(r31)
/* 800F1BEC 000EEB2C  80 BF 02 E4 */	lwz r5, 0x2e4(r31)
/* 800F1BF0 000EEB30  28 04 00 00 */	cmplwi r4, 0
/* 800F1BF4 000EEB34  40 82 00 10 */	bne .L_800F1C04
/* 800F1BF8 000EEB38  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 800F1BFC 000EEB3C  90 A3 00 04 */	stw r5, 4(r3)
/* 800F1C00 000EEB40  48 00 00 08 */	b .L_800F1C08
.L_800F1C04:
/* 800F1C04 000EEB44  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_800F1C08:
/* 800F1C08 000EEB48  28 05 00 00 */	cmplwi r5, 0
/* 800F1C0C 000EEB4C  40 82 00 10 */	bne .L_800F1C1C
/* 800F1C10 000EEB50  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 800F1C14 000EEB54  90 83 00 00 */	stw r4, 0(r3)
/* 800F1C18 000EEB58  48 00 00 08 */	b .L_800F1C20
.L_800F1C1C:
/* 800F1C1C 000EEB5C  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_800F1C20:
/* 800F1C20 000EEB60  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 800F1C24 000EEB64  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 800F1C28 000EEB68  80 A4 00 00 */	lwz r5, 0(r4)
/* 800F1C2C 000EEB6C  48 00 00 08 */	b .L_800F1C34
.L_800F1C30:
/* 800F1C30 000EEB70  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_800F1C34:
/* 800F1C34 000EEB74  28 05 00 00 */	cmplwi r5, 0
/* 800F1C38 000EEB78  41 82 00 14 */	beq .L_800F1C4C
/* 800F1C3C 000EEB7C  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 800F1C40 000EEB80  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 800F1C44 000EEB84  7C 03 00 00 */	cmpw r3, r0
/* 800F1C48 000EEB88  40 81 FF E8 */	ble .L_800F1C30
.L_800F1C4C:
/* 800F1C4C 000EEB8C  28 05 00 00 */	cmplwi r5, 0
/* 800F1C50 000EEB90  40 82 00 34 */	bne .L_800F1C84
/* 800F1C54 000EEB94  80 64 00 04 */	lwz r3, 4(r4)
/* 800F1C58 000EEB98  28 03 00 00 */	cmplwi r3, 0
/* 800F1C5C 000EEB9C  40 82 00 0C */	bne .L_800F1C68
/* 800F1C60 000EEBA0  93 E4 00 00 */	stw r31, 0(r4)
/* 800F1C64 000EEBA4  48 00 00 08 */	b .L_800F1C6C
.L_800F1C68:
/* 800F1C68 000EEBA8  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_800F1C6C:
/* 800F1C6C 000EEBAC  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 800F1C70 000EEBB0  38 00 00 00 */	li r0, 0
/* 800F1C74 000EEBB4  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 800F1C78 000EEBB8  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 800F1C7C 000EEBBC  93 E3 00 04 */	stw r31, 4(r3)
/* 800F1C80 000EEBC0  48 00 00 2C */	b .L_800F1CAC
.L_800F1C84:
/* 800F1C84 000EEBC4  90 BF 02 E0 */	stw r5, 0x2e0(r31)
/* 800F1C88 000EEBC8  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 800F1C8C 000EEBCC  93 E5 02 E4 */	stw r31, 0x2e4(r5)
/* 800F1C90 000EEBD0  28 03 00 00 */	cmplwi r3, 0
/* 800F1C94 000EEBD4  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 800F1C98 000EEBD8  40 82 00 10 */	bne .L_800F1CA8
/* 800F1C9C 000EEBDC  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 800F1CA0 000EEBE0  93 E3 00 00 */	stw r31, 0(r3)
/* 800F1CA4 000EEBE4  48 00 00 08 */	b .L_800F1CAC
.L_800F1CA8:
/* 800F1CA8 000EEBE8  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_800F1CAC:
/* 800F1CAC 000EEBEC  80 7F 02 F0 */	lwz r3, 0x2f0(r31)
/* 800F1CB0 000EEBF0  28 03 00 00 */	cmplwi r3, 0
/* 800F1CB4 000EEBF4  41 82 00 18 */	beq .L_800F1CCC
/* 800F1CB8 000EEBF8  80 63 00 08 */	lwz r3, 8(r3)
/* 800F1CBC 000EEBFC  48 00 00 14 */	b .L_800F1CD0
.L_800F1CC0:
/* 800F1CC0 000EEC00  38 00 00 01 */	li r0, 1
/* 800F1CC4 000EEC04  90 0D 8F DC */	stw r0, RunQueueHint@sda21(r13)
/* 800F1CC8 000EEC08  93 DF 02 D0 */	stw r30, 0x2d0(r31)
.L_800F1CCC:
/* 800F1CCC 000EEC0C  38 60 00 00 */	li r3, 0
.L_800F1CD0:
/* 800F1CD0 000EEC10  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F1CD4 000EEC14  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F1CD8 000EEC18  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800F1CDC 000EEC1C  38 21 00 18 */	addi r1, r1, 0x18
/* 800F1CE0 000EEC20  7C 08 03 A6 */	mtlr r0
/* 800F1CE4 000EEC24  4E 80 00 20 */	blr 

.global __OSPromoteThread
__OSPromoteThread:
/* 800F1CE8 000EEC28  7C 08 02 A6 */	mflr r0
/* 800F1CEC 000EEC2C  90 01 00 04 */	stw r0, 4(r1)
/* 800F1CF0 000EEC30  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F1CF4 000EEC34  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F1CF8 000EEC38  7C 9F 23 78 */	mr r31, r4
.L_800F1CFC:
/* 800F1CFC 000EEC3C  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 800F1D00 000EEC40  2C 00 00 00 */	cmpwi r0, 0
/* 800F1D04 000EEC44  41 81 00 20 */	bgt .L_800F1D24
/* 800F1D08 000EEC48  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F1D0C 000EEC4C  7C 00 F8 00 */	cmpw r0, r31
/* 800F1D10 000EEC50  40 81 00 14 */	ble .L_800F1D24
/* 800F1D14 000EEC54  7F E4 FB 78 */	mr r4, r31
/* 800F1D18 000EEC58  4B FF FE 11 */	bl SetEffectivePriority
/* 800F1D1C 000EEC5C  28 03 00 00 */	cmplwi r3, 0
/* 800F1D20 000EEC60  40 82 FF DC */	bne .L_800F1CFC
.L_800F1D24:
/* 800F1D24 000EEC64  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F1D28 000EEC68  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F1D2C 000EEC6C  38 21 00 18 */	addi r1, r1, 0x18
/* 800F1D30 000EEC70  7C 08 03 A6 */	mtlr r0
/* 800F1D34 000EEC74  4E 80 00 20 */	blr 

SelectThread:
/* 800F1D38 000EEC78  7C 08 02 A6 */	mflr r0
/* 800F1D3C 000EEC7C  3C 80 80 4F */	lis r4, RunQueue@ha
/* 800F1D40 000EEC80  90 01 00 04 */	stw r0, 4(r1)
/* 800F1D44 000EEC84  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F1D48 000EEC88  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F1D4C 000EEC8C  3B E4 67 38 */	addi r31, r4, RunQueue@l
/* 800F1D50 000EEC90  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800F1D54 000EEC94  3B C3 00 00 */	addi r30, r3, 0
/* 800F1D58 000EEC98  80 0D 8F E0 */	lwz r0, Reschedule@sda21(r13)
/* 800F1D5C 000EEC9C  2C 00 00 00 */	cmpwi r0, 0
/* 800F1D60 000EECA0  40 81 00 0C */	ble .L_800F1D6C
/* 800F1D64 000EECA4  38 60 00 00 */	li r3, 0
/* 800F1D68 000EECA8  48 00 01 E0 */	b .L_800F1F48
.L_800F1D6C:
/* 800F1D6C 000EECAC  4B FF B2 95 */	bl OSGetCurrentContext
/* 800F1D70 000EECB0  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 800F1D74 000EECB4  80 C4 00 E4 */	lwz r6, 0x800000E4@l(r4)
/* 800F1D78 000EECB8  7C 03 30 40 */	cmplw r3, r6
/* 800F1D7C 000EECBC  38 66 00 00 */	addi r3, r6, 0
/* 800F1D80 000EECC0  41 82 00 0C */	beq .L_800F1D8C
/* 800F1D84 000EECC4  38 60 00 00 */	li r3, 0
/* 800F1D88 000EECC8  48 00 01 C0 */	b .L_800F1F48
.L_800F1D8C:
/* 800F1D8C 000EECCC  28 06 00 00 */	cmplwi r6, 0
/* 800F1D90 000EECD0  41 82 00 BC */	beq .L_800F1E4C
/* 800F1D94 000EECD4  A0 06 02 C8 */	lhz r0, 0x2c8(r6)
/* 800F1D98 000EECD8  28 00 00 02 */	cmplwi r0, 2
/* 800F1D9C 000EECDC  40 82 00 90 */	bne .L_800F1E2C
/* 800F1DA0 000EECE0  2C 1E 00 00 */	cmpwi r30, 0
/* 800F1DA4 000EECE4  40 82 00 20 */	bne .L_800F1DC4
/* 800F1DA8 000EECE8  80 8D 8F D8 */	lwz r4, RunQueueBits@sda21(r13)
/* 800F1DAC 000EECEC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F1DB0 000EECF0  7C 84 00 34 */	cntlzw r4, r4
/* 800F1DB4 000EECF4  7C 00 20 00 */	cmpw r0, r4
/* 800F1DB8 000EECF8  41 81 00 0C */	bgt .L_800F1DC4
/* 800F1DBC 000EECFC  38 60 00 00 */	li r3, 0
/* 800F1DC0 000EED00  48 00 01 88 */	b .L_800F1F48
.L_800F1DC4:
/* 800F1DC4 000EED04  38 00 00 01 */	li r0, 1
/* 800F1DC8 000EED08  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 800F1DCC 000EED0C  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F1DD0 000EED10  54 00 18 38 */	slwi r0, r0, 3
/* 800F1DD4 000EED14  7C 1F 02 14 */	add r0, r31, r0
/* 800F1DD8 000EED18  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 800F1DDC 000EED1C  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 800F1DE0 000EED20  80 85 00 04 */	lwz r4, 4(r5)
/* 800F1DE4 000EED24  28 04 00 00 */	cmplwi r4, 0
/* 800F1DE8 000EED28  40 82 00 0C */	bne .L_800F1DF4
/* 800F1DEC 000EED2C  90 C5 00 00 */	stw r6, 0(r5)
/* 800F1DF0 000EED30  48 00 00 08 */	b .L_800F1DF8
.L_800F1DF4:
/* 800F1DF4 000EED34  90 C4 02 E0 */	stw r6, 0x2e0(r4)
.L_800F1DF8:
/* 800F1DF8 000EED38  90 86 02 E4 */	stw r4, 0x2e4(r6)
/* 800F1DFC 000EED3C  38 00 00 00 */	li r0, 0
/* 800F1E00 000EED40  38 80 00 01 */	li r4, 1
/* 800F1E04 000EED44  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 800F1E08 000EED48  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 800F1E0C 000EED4C  90 C5 00 04 */	stw r6, 4(r5)
/* 800F1E10 000EED50  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F1E14 000EED54  80 AD 8F D8 */	lwz r5, RunQueueBits@sda21(r13)
/* 800F1E18 000EED58  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F1E1C 000EED5C  7C 80 00 30 */	slw r0, r4, r0
/* 800F1E20 000EED60  7C A0 03 78 */	or r0, r5, r0
/* 800F1E24 000EED64  90 0D 8F D8 */	stw r0, RunQueueBits@sda21(r13)
/* 800F1E28 000EED68  90 8D 8F DC */	stw r4, RunQueueHint@sda21(r13)
.L_800F1E2C:
/* 800F1E2C 000EED6C  A0 06 01 A2 */	lhz r0, 0x1a2(r6)
/* 800F1E30 000EED70  54 00 07 BD */	rlwinm. r0, r0, 0, 0x1e, 0x1e
/* 800F1E34 000EED74  40 82 00 18 */	bne .L_800F1E4C
/* 800F1E38 000EED78  4B FF B1 D5 */	bl OSSaveContext
/* 800F1E3C 000EED7C  28 03 00 00 */	cmplwi r3, 0
/* 800F1E40 000EED80  41 82 00 0C */	beq .L_800F1E4C
/* 800F1E44 000EED84  38 60 00 00 */	li r3, 0
/* 800F1E48 000EED88  48 00 01 00 */	b .L_800F1F48
.L_800F1E4C:
/* 800F1E4C 000EED8C  80 0D 8F D8 */	lwz r0, RunQueueBits@sda21(r13)
/* 800F1E50 000EED90  28 00 00 00 */	cmplwi r0, 0
/* 800F1E54 000EED94  40 82 00 54 */	bne .L_800F1EA8
/* 800F1E58 000EED98  81 8D 83 78 */	lwz r12, SwitchThreadCallback@sda21(r13)
/* 800F1E5C 000EED9C  3F C0 80 00 */	lis r30, 0x800000E4@ha
/* 800F1E60 000EEDA0  80 7E 00 E4 */	lwz r3, 0x800000E4@l(r30)
/* 800F1E64 000EEDA4  38 80 00 00 */	li r4, 0
/* 800F1E68 000EEDA8  7D 88 03 A6 */	mtlr r12
/* 800F1E6C 000EEDAC  4E 80 00 21 */	blrl 
/* 800F1E70 000EEDB0  38 00 00 00 */	li r0, 0
/* 800F1E74 000EEDB4  90 1E 00 E4 */	stw r0, 0xe4(r30)
/* 800F1E78 000EEDB8  38 7F 07 30 */	addi r3, r31, 0x730
/* 800F1E7C 000EEDBC  4B FF B1 29 */	bl OSSetCurrentContext
.L_800F1E80:
/* 800F1E80 000EEDC0  4B FF CD CD */	bl OSEnableInterrupts
.L_800F1E84:
/* 800F1E84 000EEDC4  80 0D 8F D8 */	lwz r0, RunQueueBits@sda21(r13)
/* 800F1E88 000EEDC8  28 00 00 00 */	cmplwi r0, 0
/* 800F1E8C 000EEDCC  41 82 FF F8 */	beq .L_800F1E84
/* 800F1E90 000EEDD0  4B FF CD A9 */	bl OSDisableInterrupts
/* 800F1E94 000EEDD4  80 0D 8F D8 */	lwz r0, RunQueueBits@sda21(r13)
/* 800F1E98 000EEDD8  28 00 00 00 */	cmplwi r0, 0
/* 800F1E9C 000EEDDC  41 82 FF E4 */	beq .L_800F1E80
/* 800F1EA0 000EEDE0  38 7F 07 30 */	addi r3, r31, 0x730
/* 800F1EA4 000EEDE4  4B FF B2 C9 */	bl OSClearContext
.L_800F1EA8:
/* 800F1EA8 000EEDE8  38 60 00 00 */	li r3, 0
/* 800F1EAC 000EEDEC  90 6D 8F DC */	stw r3, RunQueueHint@sda21(r13)
/* 800F1EB0 000EEDF0  80 0D 8F D8 */	lwz r0, RunQueueBits@sda21(r13)
/* 800F1EB4 000EEDF4  7C 07 00 34 */	cntlzw r7, r0
/* 800F1EB8 000EEDF8  54 E0 18 38 */	slwi r0, r7, 3
/* 800F1EBC 000EEDFC  7C 9F 02 14 */	add r4, r31, r0
/* 800F1EC0 000EEE00  80 A4 00 00 */	lwz r5, 0(r4)
/* 800F1EC4 000EEE04  80 C5 02 E0 */	lwz r6, 0x2e0(r5)
/* 800F1EC8 000EEE08  3B C5 00 00 */	addi r30, r5, 0
/* 800F1ECC 000EEE0C  28 06 00 00 */	cmplwi r6, 0
/* 800F1ED0 000EEE10  40 82 00 0C */	bne .L_800F1EDC
/* 800F1ED4 000EEE14  90 64 00 04 */	stw r3, 4(r4)
/* 800F1ED8 000EEE18  48 00 00 08 */	b .L_800F1EE0
.L_800F1EDC:
/* 800F1EDC 000EEE1C  90 66 02 E4 */	stw r3, 0x2e4(r6)
.L_800F1EE0:
/* 800F1EE0 000EEE20  90 C4 00 00 */	stw r6, 0(r4)
/* 800F1EE4 000EEE24  80 04 00 00 */	lwz r0, 0(r4)
/* 800F1EE8 000EEE28  28 00 00 00 */	cmplwi r0, 0
/* 800F1EEC 000EEE2C  40 82 00 1C */	bne .L_800F1F08
/* 800F1EF0 000EEE30  20 07 00 1F */	subfic r0, r7, 0x1f
/* 800F1EF4 000EEE34  80 8D 8F D8 */	lwz r4, RunQueueBits@sda21(r13)
/* 800F1EF8 000EEE38  38 60 00 01 */	li r3, 1
/* 800F1EFC 000EEE3C  7C 60 00 30 */	slw r0, r3, r0
/* 800F1F00 000EEE40  7C 80 00 78 */	andc r0, r4, r0
/* 800F1F04 000EEE44  90 0D 8F D8 */	stw r0, RunQueueBits@sda21(r13)
.L_800F1F08:
/* 800F1F08 000EEE48  38 00 00 00 */	li r0, 0
/* 800F1F0C 000EEE4C  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 800F1F10 000EEE50  38 00 00 02 */	li r0, 2
/* 800F1F14 000EEE54  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 800F1F18 000EEE58  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F1F1C 000EEE5C  7F C4 F3 78 */	mr r4, r30
/* 800F1F20 000EEE60  81 8D 83 78 */	lwz r12, SwitchThreadCallback@sda21(r13)
/* 800F1F24 000EEE64  80 7F 00 E4 */	lwz r3, 0x800000E4@l(r31)
/* 800F1F28 000EEE68  7D 88 03 A6 */	mtlr r12
/* 800F1F2C 000EEE6C  4E 80 00 21 */	blrl 
/* 800F1F30 000EEE70  93 DF 00 E4 */	stw r30, 0xe4(r31)
/* 800F1F34 000EEE74  7F C3 F3 78 */	mr r3, r30
/* 800F1F38 000EEE78  4B FF B0 6D */	bl OSSetCurrentContext
/* 800F1F3C 000EEE7C  7F C3 F3 78 */	mr r3, r30
/* 800F1F40 000EEE80  4B FF B1 4D */	bl OSLoadContext
/* 800F1F44 000EEE84  7F C3 F3 78 */	mr r3, r30
.L_800F1F48:
/* 800F1F48 000EEE88  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F1F4C 000EEE8C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F1F50 000EEE90  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800F1F54 000EEE94  38 21 00 18 */	addi r1, r1, 0x18
/* 800F1F58 000EEE98  7C 08 03 A6 */	mtlr r0
/* 800F1F5C 000EEE9C  4E 80 00 20 */	blr 

.global __OSReschedule
__OSReschedule:
/* 800F1F60 000EEEA0  7C 08 02 A6 */	mflr r0
/* 800F1F64 000EEEA4  90 01 00 04 */	stw r0, 4(r1)
/* 800F1F68 000EEEA8  94 21 FF F8 */	stwu r1, -8(r1)
/* 800F1F6C 000EEEAC  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F1F70 000EEEB0  2C 00 00 00 */	cmpwi r0, 0
/* 800F1F74 000EEEB4  41 82 00 0C */	beq .L_800F1F80
/* 800F1F78 000EEEB8  38 60 00 00 */	li r3, 0
/* 800F1F7C 000EEEBC  4B FF FD BD */	bl SelectThread
.L_800F1F80:
/* 800F1F80 000EEEC0  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800F1F84 000EEEC4  38 21 00 08 */	addi r1, r1, 8
/* 800F1F88 000EEEC8  7C 08 03 A6 */	mtlr r0
/* 800F1F8C 000EEECC  4E 80 00 20 */	blr 

.global OSYieldThread
OSYieldThread:
/* 800F1F90 000EEED0  7C 08 02 A6 */	mflr r0
/* 800F1F94 000EEED4  90 01 00 04 */	stw r0, 4(r1)
/* 800F1F98 000EEED8  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F1F9C 000EEEDC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F1FA0 000EEEE0  4B FF CC 99 */	bl OSDisableInterrupts
/* 800F1FA4 000EEEE4  3B E3 00 00 */	addi r31, r3, 0
/* 800F1FA8 000EEEE8  38 60 00 01 */	li r3, 1
/* 800F1FAC 000EEEEC  4B FF FD 8D */	bl SelectThread
/* 800F1FB0 000EEEF0  7F E3 FB 78 */	mr r3, r31
/* 800F1FB4 000EEEF4  4B FF CC AD */	bl OSRestoreInterrupts
/* 800F1FB8 000EEEF8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F1FBC 000EEEFC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F1FC0 000EEF00  38 21 00 10 */	addi r1, r1, 0x10
/* 800F1FC4 000EEF04  7C 08 03 A6 */	mtlr r0
/* 800F1FC8 000EEF08  4E 80 00 20 */	blr 

.global OSCreateThread
OSCreateThread:
/* 800F1FCC 000EEF0C  7C 08 02 A6 */	mflr r0
/* 800F1FD0 000EEF10  2C 08 00 00 */	cmpwi r8, 0
/* 800F1FD4 000EEF14  90 01 00 04 */	stw r0, 4(r1)
/* 800F1FD8 000EEF18  94 21 FF B0 */	stwu r1, -0x50(r1)
/* 800F1FDC 000EEF1C  BF 61 00 3C */	stmw r27, 0x3c(r1)
/* 800F1FE0 000EEF20  3B E3 00 00 */	addi r31, r3, 0
/* 800F1FE4 000EEF24  3B 65 00 00 */	addi r27, r5, 0
/* 800F1FE8 000EEF28  3B 86 00 00 */	addi r28, r6, 0
/* 800F1FEC 000EEF2C  3B A7 00 00 */	addi r29, r7, 0
/* 800F1FF0 000EEF30  41 80 00 0C */	blt .L_800F1FFC
/* 800F1FF4 000EEF34  2C 08 00 1F */	cmpwi r8, 0x1f
/* 800F1FF8 000EEF38  40 81 00 0C */	ble .L_800F2004
.L_800F1FFC:
/* 800F1FFC 000EEF3C  38 60 00 00 */	li r3, 0
/* 800F2000 000EEF40  48 00 01 A0 */	b .L_800F21A0
.L_800F2004:
/* 800F2004 000EEF44  38 C0 00 01 */	li r6, 1
/* 800F2008 000EEF48  B0 DF 02 C8 */	sth r6, 0x2c8(r31)
/* 800F200C 000EEF4C  55 20 07 FE */	clrlwi r0, r9, 0x1f
/* 800F2010 000EEF50  57 87 00 38 */	rlwinm r7, r28, 0, 0, 0x1c
/* 800F2014 000EEF54  B0 1F 02 CA */	sth r0, 0x2ca(r31)
/* 800F2018 000EEF58  38 00 FF FF */	li r0, -1
/* 800F201C 000EEF5C  3B C0 00 00 */	li r30, 0
/* 800F2020 000EEF60  91 1F 02 D4 */	stw r8, 0x2d4(r31)
/* 800F2024 000EEF64  38 7F 00 00 */	addi r3, r31, 0
/* 800F2028 000EEF68  38 A7 FF F8 */	addi r5, r7, -8
/* 800F202C 000EEF6C  91 1F 02 D0 */	stw r8, 0x2d0(r31)
/* 800F2030 000EEF70  90 DF 02 CC */	stw r6, 0x2cc(r31)
/* 800F2034 000EEF74  90 1F 02 D8 */	stw r0, 0x2d8(r31)
/* 800F2038 000EEF78  93 DF 02 F0 */	stw r30, 0x2f0(r31)
/* 800F203C 000EEF7C  93 DF 02 EC */	stw r30, 0x2ec(r31)
/* 800F2040 000EEF80  93 DF 02 E8 */	stw r30, 0x2e8(r31)
/* 800F2044 000EEF84  93 DF 02 F8 */	stw r30, 0x2f8(r31)
/* 800F2048 000EEF88  93 DF 02 F4 */	stw r30, 0x2f4(r31)
/* 800F204C 000EEF8C  93 C7 FF F8 */	stw r30, -8(r7)
/* 800F2050 000EEF90  93 C7 FF FC */	stw r30, -4(r7)
/* 800F2054 000EEF94  4B FF B1 3D */	bl OSInitContext
/* 800F2058 000EEF98  3C 60 80 0F */	lis r3, OSExitThread@ha
/* 800F205C 000EEF9C  38 03 21 B4 */	addi r0, r3, OSExitThread@l
/* 800F2060 000EEFA0  90 1F 00 84 */	stw r0, 0x84(r31)
/* 800F2064 000EEFA4  3C 60 DE AE */	lis r3, 0xDEADBABE@ha
/* 800F2068 000EEFA8  7C 9D E0 50 */	subf r4, r29, r28
/* 800F206C 000EEFAC  93 7F 00 0C */	stw r27, 0xc(r31)
/* 800F2070 000EEFB0  38 03 BA BE */	addi r0, r3, 0xDEADBABE@l
/* 800F2074 000EEFB4  93 9F 03 04 */	stw r28, 0x304(r31)
/* 800F2078 000EEFB8  90 9F 03 08 */	stw r4, 0x308(r31)
/* 800F207C 000EEFBC  80 7F 03 08 */	lwz r3, 0x308(r31)
/* 800F2080 000EEFC0  90 03 00 00 */	stw r0, 0(r3)
/* 800F2084 000EEFC4  93 DF 03 0C */	stw r30, 0x30c(r31)
/* 800F2088 000EEFC8  93 DF 03 10 */	stw r30, 0x310(r31)
/* 800F208C 000EEFCC  93 DF 03 14 */	stw r30, 0x314(r31)
/* 800F2090 000EEFD0  4B FF CB A9 */	bl OSDisableInterrupts
/* 800F2094 000EEFD4  3C 80 80 4F */	lis r4, __OSErrorTable@ha
/* 800F2098 000EEFD8  38 84 66 70 */	addi r4, r4, __OSErrorTable@l
/* 800F209C 000EEFDC  80 04 00 40 */	lwz r0, 0x40(r4)
/* 800F20A0 000EEFE0  28 00 00 00 */	cmplwi r0, 0
/* 800F20A4 000EEFE4  41 82 00 C4 */	beq .L_800F2168
/* 800F20A8 000EEFE8  80 9F 01 9C */	lwz r4, 0x19c(r31)
/* 800F20AC 000EEFEC  38 00 00 04 */	li r0, 4
/* 800F20B0 000EEFF0  7C 09 03 A6 */	mtctr r0
/* 800F20B4 000EEFF4  38 BF 00 00 */	addi r5, r31, 0
/* 800F20B8 000EEFF8  60 80 09 00 */	ori r0, r4, 0x900
/* 800F20BC 000EEFFC  90 1F 01 9C */	stw r0, 0x19c(r31)
/* 800F20C0 000EF000  A0 1F 01 A2 */	lhz r0, 0x1a2(r31)
/* 800F20C4 000EF004  60 00 00 01 */	ori r0, r0, 1
/* 800F20C8 000EF008  B0 1F 01 A2 */	sth r0, 0x1a2(r31)
/* 800F20CC 000EF00C  80 0D 83 68 */	lwz r0, __OSFpscrEnableBits@sda21(r13)
/* 800F20D0 000EF010  54 00 06 38 */	rlwinm r0, r0, 0, 0x18, 0x1c
/* 800F20D4 000EF014  60 00 00 04 */	ori r0, r0, 4
/* 800F20D8 000EF018  90 1F 01 94 */	stw r0, 0x194(r31)
.L_800F20DC:
/* 800F20DC 000EF01C  38 00 FF FF */	li r0, -1
/* 800F20E0 000EF020  90 05 00 94 */	stw r0, 0x94(r5)
/* 800F20E4 000EF024  90 05 00 90 */	stw r0, 0x90(r5)
/* 800F20E8 000EF028  90 05 01 CC */	stw r0, 0x1cc(r5)
/* 800F20EC 000EF02C  90 05 01 C8 */	stw r0, 0x1c8(r5)
/* 800F20F0 000EF030  90 05 00 9C */	stw r0, 0x9c(r5)
/* 800F20F4 000EF034  90 05 00 98 */	stw r0, 0x98(r5)
/* 800F20F8 000EF038  90 05 01 D4 */	stw r0, 0x1d4(r5)
/* 800F20FC 000EF03C  90 05 01 D0 */	stw r0, 0x1d0(r5)
/* 800F2100 000EF040  90 05 00 A4 */	stw r0, 0xa4(r5)
/* 800F2104 000EF044  90 05 00 A0 */	stw r0, 0xa0(r5)
/* 800F2108 000EF048  90 05 01 DC */	stw r0, 0x1dc(r5)
/* 800F210C 000EF04C  90 05 01 D8 */	stw r0, 0x1d8(r5)
/* 800F2110 000EF050  90 05 00 AC */	stw r0, 0xac(r5)
/* 800F2114 000EF054  90 05 00 A8 */	stw r0, 0xa8(r5)
/* 800F2118 000EF058  90 05 01 E4 */	stw r0, 0x1e4(r5)
/* 800F211C 000EF05C  90 05 01 E0 */	stw r0, 0x1e0(r5)
/* 800F2120 000EF060  90 05 00 B4 */	stw r0, 0xb4(r5)
/* 800F2124 000EF064  90 05 00 B0 */	stw r0, 0xb0(r5)
/* 800F2128 000EF068  90 05 01 EC */	stw r0, 0x1ec(r5)
/* 800F212C 000EF06C  90 05 01 E8 */	stw r0, 0x1e8(r5)
/* 800F2130 000EF070  90 05 00 BC */	stw r0, 0xbc(r5)
/* 800F2134 000EF074  90 05 00 B8 */	stw r0, 0xb8(r5)
/* 800F2138 000EF078  90 05 01 F4 */	stw r0, 0x1f4(r5)
/* 800F213C 000EF07C  90 05 01 F0 */	stw r0, 0x1f0(r5)
/* 800F2140 000EF080  90 05 00 C4 */	stw r0, 0xc4(r5)
/* 800F2144 000EF084  90 05 00 C0 */	stw r0, 0xc0(r5)
/* 800F2148 000EF088  90 05 01 FC */	stw r0, 0x1fc(r5)
/* 800F214C 000EF08C  90 05 01 F8 */	stw r0, 0x1f8(r5)
/* 800F2150 000EF090  90 05 00 CC */	stw r0, 0xcc(r5)
/* 800F2154 000EF094  90 05 00 C8 */	stw r0, 0xc8(r5)
/* 800F2158 000EF098  90 05 02 04 */	stw r0, 0x204(r5)
/* 800F215C 000EF09C  90 05 02 00 */	stw r0, 0x200(r5)
/* 800F2160 000EF0A0  38 A5 00 40 */	addi r5, r5, 0x40
/* 800F2164 000EF0A4  42 00 FF 78 */	bdnz .L_800F20DC
.L_800F2168:
/* 800F2168 000EF0A8  3C 80 80 00 */	lis r4, 0x800000DC@ha
/* 800F216C 000EF0AC  38 A4 00 DC */	addi r5, r4, 0x800000DC@l
/* 800F2170 000EF0B0  84 C5 00 04 */	lwzu r6, 4(r5)
/* 800F2174 000EF0B4  28 06 00 00 */	cmplwi r6, 0
/* 800F2178 000EF0B8  40 82 00 0C */	bne .L_800F2184
/* 800F217C 000EF0BC  93 E4 00 DC */	stw r31, 0xdc(r4)
/* 800F2180 000EF0C0  48 00 00 08 */	b .L_800F2188
.L_800F2184:
/* 800F2184 000EF0C4  93 E6 02 FC */	stw r31, 0x2fc(r6)
.L_800F2188:
/* 800F2188 000EF0C8  90 DF 03 00 */	stw r6, 0x300(r31)
/* 800F218C 000EF0CC  38 00 00 00 */	li r0, 0
/* 800F2190 000EF0D0  90 1F 02 FC */	stw r0, 0x2fc(r31)
/* 800F2194 000EF0D4  93 E5 00 00 */	stw r31, 0(r5)
/* 800F2198 000EF0D8  4B FF CA C9 */	bl OSRestoreInterrupts
/* 800F219C 000EF0DC  38 60 00 01 */	li r3, 1
.L_800F21A0:
/* 800F21A0 000EF0E0  BB 61 00 3C */	lmw r27, 0x3c(r1)
/* 800F21A4 000EF0E4  80 01 00 54 */	lwz r0, 0x54(r1)
/* 800F21A8 000EF0E8  38 21 00 50 */	addi r1, r1, 0x50
/* 800F21AC 000EF0EC  7C 08 03 A6 */	mtlr r0
/* 800F21B0 000EF0F0  4E 80 00 20 */	blr 

.global OSExitThread
OSExitThread:
/* 800F21B4 000EF0F4  7C 08 02 A6 */	mflr r0
/* 800F21B8 000EF0F8  90 01 00 04 */	stw r0, 4(r1)
/* 800F21BC 000EF0FC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F21C0 000EF100  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F21C4 000EF104  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F21C8 000EF108  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F21CC 000EF10C  93 81 00 10 */	stw r28, 0x10(r1)
/* 800F21D0 000EF110  7C 7C 1B 78 */	mr r28, r3
/* 800F21D4 000EF114  4B FF CA 65 */	bl OSDisableInterrupts
/* 800F21D8 000EF118  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 800F21DC 000EF11C  83 DF 00 E4 */	lwz r30, 0x800000E4@l(r31)
/* 800F21E0 000EF120  3B A3 00 00 */	addi r29, r3, 0
/* 800F21E4 000EF124  38 7E 00 00 */	addi r3, r30, 0
/* 800F21E8 000EF128  4B FF AF 85 */	bl OSClearContext
/* 800F21EC 000EF12C  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 800F21F0 000EF130  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800F21F4 000EF134  41 82 00 44 */	beq .L_800F2238
/* 800F21F8 000EF138  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 800F21FC 000EF13C  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 800F2200 000EF140  28 04 00 00 */	cmplwi r4, 0
/* 800F2204 000EF144  40 82 00 0C */	bne .L_800F2210
/* 800F2208 000EF148  90 BF 00 E0 */	stw r5, 0xe0(r31)
/* 800F220C 000EF14C  48 00 00 08 */	b .L_800F2214
.L_800F2210:
/* 800F2210 000EF150  90 A4 03 00 */	stw r5, 0x300(r4)
.L_800F2214:
/* 800F2214 000EF154  28 05 00 00 */	cmplwi r5, 0
/* 800F2218 000EF158  40 82 00 10 */	bne .L_800F2228
/* 800F221C 000EF15C  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F2220 000EF160  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F2224 000EF164  48 00 00 08 */	b .L_800F222C
.L_800F2228:
/* 800F2228 000EF168  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_800F222C:
/* 800F222C 000EF16C  38 00 00 00 */	li r0, 0
/* 800F2230 000EF170  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F2234 000EF174  48 00 00 10 */	b .L_800F2244
.L_800F2238:
/* 800F2238 000EF178  38 00 00 08 */	li r0, 8
/* 800F223C 000EF17C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F2240 000EF180  93 9E 02 D8 */	stw r28, 0x2d8(r30)
.L_800F2244:
/* 800F2244 000EF184  7F C3 F3 78 */	mr r3, r30
/* 800F2248 000EF188  4B FF DA C5 */	bl __OSUnlockAllMutex
/* 800F224C 000EF18C  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 800F2250 000EF190  48 00 07 89 */	bl OSWakeupThread
/* 800F2254 000EF194  38 00 00 01 */	li r0, 1
/* 800F2258 000EF198  90 0D 8F DC */	stw r0, RunQueueHint@sda21(r13)
/* 800F225C 000EF19C  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F2260 000EF1A0  2C 00 00 00 */	cmpwi r0, 0
/* 800F2264 000EF1A4  41 82 00 0C */	beq .L_800F2270
/* 800F2268 000EF1A8  38 60 00 00 */	li r3, 0
/* 800F226C 000EF1AC  4B FF FA CD */	bl SelectThread
.L_800F2270:
/* 800F2270 000EF1B0  7F A3 EB 78 */	mr r3, r29
/* 800F2274 000EF1B4  4B FF C9 ED */	bl OSRestoreInterrupts
/* 800F2278 000EF1B8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F227C 000EF1BC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F2280 000EF1C0  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F2284 000EF1C4  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F2288 000EF1C8  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800F228C 000EF1CC  38 21 00 20 */	addi r1, r1, 0x20
/* 800F2290 000EF1D0  7C 08 03 A6 */	mtlr r0
/* 800F2294 000EF1D4  4E 80 00 20 */	blr 

.global OSCancelThread
OSCancelThread:
/* 800F2298 000EF1D8  7C 08 02 A6 */	mflr r0
/* 800F229C 000EF1DC  90 01 00 04 */	stw r0, 4(r1)
/* 800F22A0 000EF1E0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F22A4 000EF1E4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F22A8 000EF1E8  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F22AC 000EF1EC  7C 7E 1B 78 */	mr r30, r3
/* 800F22B0 000EF1F0  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F22B4 000EF1F4  4B FF C9 85 */	bl OSDisableInterrupts
/* 800F22B8 000EF1F8  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 800F22BC 000EF1FC  3B E3 00 00 */	addi r31, r3, 0
/* 800F22C0 000EF200  2C 00 00 03 */	cmpwi r0, 3
/* 800F22C4 000EF204  41 82 00 DC */	beq .L_800F23A0
/* 800F22C8 000EF208  40 80 00 14 */	bge .L_800F22DC
/* 800F22CC 000EF20C  2C 00 00 01 */	cmpwi r0, 1
/* 800F22D0 000EF210  41 82 00 18 */	beq .L_800F22E8
/* 800F22D4 000EF214  40 80 00 2C */	bge .L_800F2300
/* 800F22D8 000EF218  48 00 00 C8 */	b .L_800F23A0
.L_800F22DC:
/* 800F22DC 000EF21C  2C 00 00 05 */	cmpwi r0, 5
/* 800F22E0 000EF220  40 80 00 C0 */	bge .L_800F23A0
/* 800F22E4 000EF224  48 00 00 28 */	b .L_800F230C
.L_800F22E8:
/* 800F22E8 000EF228  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 800F22EC 000EF22C  2C 00 00 00 */	cmpwi r0, 0
/* 800F22F0 000EF230  41 81 00 BC */	bgt .L_800F23AC
/* 800F22F4 000EF234  7F C3 F3 78 */	mr r3, r30
/* 800F22F8 000EF238  4B FF F7 8D */	bl UnsetRun
/* 800F22FC 000EF23C  48 00 00 B0 */	b .L_800F23AC
.L_800F2300:
/* 800F2300 000EF240  38 00 00 01 */	li r0, 1
/* 800F2304 000EF244  90 0D 8F DC */	stw r0, RunQueueHint@sda21(r13)
/* 800F2308 000EF248  48 00 00 A4 */	b .L_800F23AC
.L_800F230C:
/* 800F230C 000EF24C  80 9E 02 E0 */	lwz r4, 0x2e0(r30)
/* 800F2310 000EF250  80 BE 02 E4 */	lwz r5, 0x2e4(r30)
/* 800F2314 000EF254  28 04 00 00 */	cmplwi r4, 0
/* 800F2318 000EF258  40 82 00 10 */	bne .L_800F2328
/* 800F231C 000EF25C  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 800F2320 000EF260  90 A3 00 04 */	stw r5, 4(r3)
/* 800F2324 000EF264  48 00 00 08 */	b .L_800F232C
.L_800F2328:
/* 800F2328 000EF268  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_800F232C:
/* 800F232C 000EF26C  28 05 00 00 */	cmplwi r5, 0
/* 800F2330 000EF270  40 82 00 10 */	bne .L_800F2340
/* 800F2334 000EF274  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 800F2338 000EF278  90 83 00 00 */	stw r4, 0(r3)
/* 800F233C 000EF27C  48 00 00 08 */	b .L_800F2344
.L_800F2340:
/* 800F2340 000EF280  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_800F2344:
/* 800F2344 000EF284  38 00 00 00 */	li r0, 0
/* 800F2348 000EF288  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 800F234C 000EF28C  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 800F2350 000EF290  2C 00 00 00 */	cmpwi r0, 0
/* 800F2354 000EF294  41 81 00 58 */	bgt .L_800F23AC
/* 800F2358 000EF298  80 7E 02 F0 */	lwz r3, 0x2f0(r30)
/* 800F235C 000EF29C  28 03 00 00 */	cmplwi r3, 0
/* 800F2360 000EF2A0  41 82 00 4C */	beq .L_800F23AC
/* 800F2364 000EF2A4  83 A3 00 08 */	lwz r29, 8(r3)
.L_800F2368:
/* 800F2368 000EF2A8  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 800F236C 000EF2AC  2C 00 00 00 */	cmpwi r0, 0
/* 800F2370 000EF2B0  41 81 00 3C */	bgt .L_800F23AC
/* 800F2374 000EF2B4  7F A3 EB 78 */	mr r3, r29
/* 800F2378 000EF2B8  4B FF F7 75 */	bl __OSGetEffectivePriority
/* 800F237C 000EF2BC  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F2380 000EF2C0  38 83 00 00 */	addi r4, r3, 0
/* 800F2384 000EF2C4  7C 00 20 00 */	cmpw r0, r4
/* 800F2388 000EF2C8  41 82 00 24 */	beq .L_800F23AC
/* 800F238C 000EF2CC  7F A3 EB 78 */	mr r3, r29
/* 800F2390 000EF2D0  4B FF F7 99 */	bl SetEffectivePriority
/* 800F2394 000EF2D4  7C 7D 1B 79 */	or. r29, r3, r3
/* 800F2398 000EF2D8  40 82 FF D0 */	bne .L_800F2368
/* 800F239C 000EF2DC  48 00 00 10 */	b .L_800F23AC
.L_800F23A0:
/* 800F23A0 000EF2E0  7F E3 FB 78 */	mr r3, r31
/* 800F23A4 000EF2E4  4B FF C8 BD */	bl OSRestoreInterrupts
/* 800F23A8 000EF2E8  48 00 00 90 */	b .L_800F2438
.L_800F23AC:
/* 800F23AC 000EF2EC  7F C3 F3 78 */	mr r3, r30
/* 800F23B0 000EF2F0  4B FF AD BD */	bl OSClearContext
/* 800F23B4 000EF2F4  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 800F23B8 000EF2F8  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800F23BC 000EF2FC  41 82 00 48 */	beq .L_800F2404
/* 800F23C0 000EF300  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 800F23C4 000EF304  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 800F23C8 000EF308  28 04 00 00 */	cmplwi r4, 0
/* 800F23CC 000EF30C  40 82 00 10 */	bne .L_800F23DC
/* 800F23D0 000EF310  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 800F23D4 000EF314  90 A3 00 E0 */	stw r5, 0x800000E0@l(r3)
/* 800F23D8 000EF318  48 00 00 08 */	b .L_800F23E0
.L_800F23DC:
/* 800F23DC 000EF31C  90 A4 03 00 */	stw r5, 0x300(r4)
.L_800F23E0:
/* 800F23E0 000EF320  28 05 00 00 */	cmplwi r5, 0
/* 800F23E4 000EF324  40 82 00 10 */	bne .L_800F23F4
/* 800F23E8 000EF328  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F23EC 000EF32C  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F23F0 000EF330  48 00 00 08 */	b .L_800F23F8
.L_800F23F4:
/* 800F23F4 000EF334  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_800F23F8:
/* 800F23F8 000EF338  38 00 00 00 */	li r0, 0
/* 800F23FC 000EF33C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F2400 000EF340  48 00 00 0C */	b .L_800F240C
.L_800F2404:
/* 800F2404 000EF344  38 00 00 08 */	li r0, 8
/* 800F2408 000EF348  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
.L_800F240C:
/* 800F240C 000EF34C  7F C3 F3 78 */	mr r3, r30
/* 800F2410 000EF350  4B FF D8 FD */	bl __OSUnlockAllMutex
/* 800F2414 000EF354  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 800F2418 000EF358  48 00 05 C1 */	bl OSWakeupThread
/* 800F241C 000EF35C  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F2420 000EF360  2C 00 00 00 */	cmpwi r0, 0
/* 800F2424 000EF364  41 82 00 0C */	beq .L_800F2430
/* 800F2428 000EF368  38 60 00 00 */	li r3, 0
/* 800F242C 000EF36C  4B FF F9 0D */	bl SelectThread
.L_800F2430:
/* 800F2430 000EF370  7F E3 FB 78 */	mr r3, r31
/* 800F2434 000EF374  4B FF C8 2D */	bl OSRestoreInterrupts
.L_800F2438:
/* 800F2438 000EF378  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F243C 000EF37C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F2440 000EF380  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F2444 000EF384  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F2448 000EF388  38 21 00 20 */	addi r1, r1, 0x20
/* 800F244C 000EF38C  7C 08 03 A6 */	mtlr r0
/* 800F2450 000EF390  4E 80 00 20 */	blr 

.global OSDetachThread
OSDetachThread:
/* 800F2454 000EF394  7C 08 02 A6 */	mflr r0
/* 800F2458 000EF398  90 01 00 04 */	stw r0, 4(r1)
/* 800F245C 000EF39C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F2460 000EF3A0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F2464 000EF3A4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800F2468 000EF3A8  7C 7E 1B 78 */	mr r30, r3
/* 800F246C 000EF3AC  4B FF C7 CD */	bl OSDisableInterrupts
/* 800F2470 000EF3B0  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 800F2474 000EF3B4  3B E3 00 00 */	addi r31, r3, 0
/* 800F2478 000EF3B8  60 00 00 01 */	ori r0, r0, 1
/* 800F247C 000EF3BC  B0 1E 02 CA */	sth r0, 0x2ca(r30)
/* 800F2480 000EF3C0  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 800F2484 000EF3C4  28 00 00 08 */	cmplwi r0, 8
/* 800F2488 000EF3C8  40 82 00 44 */	bne .L_800F24CC
/* 800F248C 000EF3CC  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 800F2490 000EF3D0  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 800F2494 000EF3D4  28 04 00 00 */	cmplwi r4, 0
/* 800F2498 000EF3D8  40 82 00 10 */	bne .L_800F24A8
/* 800F249C 000EF3DC  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 800F24A0 000EF3E0  90 A3 00 E0 */	stw r5, 0x800000E0@l(r3)
/* 800F24A4 000EF3E4  48 00 00 08 */	b .L_800F24AC
.L_800F24A8:
/* 800F24A8 000EF3E8  90 A4 03 00 */	stw r5, 0x300(r4)
.L_800F24AC:
/* 800F24AC 000EF3EC  28 05 00 00 */	cmplwi r5, 0
/* 800F24B0 000EF3F0  40 82 00 10 */	bne .L_800F24C0
/* 800F24B4 000EF3F4  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F24B8 000EF3F8  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F24BC 000EF3FC  48 00 00 08 */	b .L_800F24C4
.L_800F24C0:
/* 800F24C0 000EF400  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_800F24C4:
/* 800F24C4 000EF404  38 00 00 00 */	li r0, 0
/* 800F24C8 000EF408  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
.L_800F24CC:
/* 800F24CC 000EF40C  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 800F24D0 000EF410  48 00 05 09 */	bl OSWakeupThread
/* 800F24D4 000EF414  7F E3 FB 78 */	mr r3, r31
/* 800F24D8 000EF418  4B FF C7 89 */	bl OSRestoreInterrupts
/* 800F24DC 000EF41C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F24E0 000EF420  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F24E4 000EF424  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800F24E8 000EF428  38 21 00 18 */	addi r1, r1, 0x18
/* 800F24EC 000EF42C  7C 08 03 A6 */	mtlr r0
/* 800F24F0 000EF430  4E 80 00 20 */	blr 

.global OSResumeThread
OSResumeThread:
/* 800F24F4 000EF434  7C 08 02 A6 */	mflr r0
/* 800F24F8 000EF438  90 01 00 04 */	stw r0, 4(r1)
/* 800F24FC 000EF43C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800F2500 000EF440  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800F2504 000EF444  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800F2508 000EF448  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800F250C 000EF44C  7C 7D 1B 78 */	mr r29, r3
/* 800F2510 000EF450  4B FF C7 29 */	bl OSDisableInterrupts
/* 800F2514 000EF454  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 800F2518 000EF458  3B E3 00 00 */	addi r31, r3, 0
/* 800F251C 000EF45C  38 04 FF FF */	addi r0, r4, -1
/* 800F2520 000EF460  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 800F2524 000EF464  7C 9E 23 78 */	mr r30, r4
/* 800F2528 000EF468  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 800F252C 000EF46C  2C 00 00 00 */	cmpwi r0, 0
/* 800F2530 000EF470  40 80 00 10 */	bge .L_800F2540
/* 800F2534 000EF474  38 00 00 00 */	li r0, 0
/* 800F2538 000EF478  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 800F253C 000EF47C  48 00 02 18 */	b .L_800F2754
.L_800F2540:
/* 800F2540 000EF480  40 82 02 14 */	bne .L_800F2754
/* 800F2544 000EF484  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 800F2548 000EF488  2C 00 00 04 */	cmpwi r0, 4
/* 800F254C 000EF48C  41 82 00 B8 */	beq .L_800F2604
/* 800F2550 000EF490  40 80 01 F0 */	bge .L_800F2740
/* 800F2554 000EF494  2C 00 00 01 */	cmpwi r0, 1
/* 800F2558 000EF498  41 82 00 08 */	beq .L_800F2560
/* 800F255C 000EF49C  48 00 01 E4 */	b .L_800F2740
.L_800F2560:
/* 800F2560 000EF4A0  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 800F2564 000EF4A4  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 800F2568 000EF4A8  48 00 00 24 */	b .L_800F258C
.L_800F256C:
/* 800F256C 000EF4AC  80 83 00 00 */	lwz r4, 0(r3)
/* 800F2570 000EF4B0  28 04 00 00 */	cmplwi r4, 0
/* 800F2574 000EF4B4  41 82 00 14 */	beq .L_800F2588
/* 800F2578 000EF4B8  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 800F257C 000EF4BC  7C 04 00 00 */	cmpw r4, r0
/* 800F2580 000EF4C0  40 80 00 08 */	bge .L_800F2588
/* 800F2584 000EF4C4  7C 80 23 78 */	mr r0, r4
.L_800F2588:
/* 800F2588 000EF4C8  80 63 00 10 */	lwz r3, 0x10(r3)
.L_800F258C:
/* 800F258C 000EF4CC  28 03 00 00 */	cmplwi r3, 0
/* 800F2590 000EF4D0  40 82 FF DC */	bne .L_800F256C
/* 800F2594 000EF4D4  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 800F2598 000EF4D8  3C 60 80 4F */	lis r3, RunQueue@ha
/* 800F259C 000EF4DC  38 03 67 38 */	addi r0, r3, RunQueue@l
/* 800F25A0 000EF4E0  80 7D 02 D0 */	lwz r3, 0x2d0(r29)
/* 800F25A4 000EF4E4  54 63 18 38 */	slwi r3, r3, 3
/* 800F25A8 000EF4E8  7C 00 1A 14 */	add r0, r0, r3
/* 800F25AC 000EF4EC  90 1D 02 DC */	stw r0, 0x2dc(r29)
/* 800F25B0 000EF4F0  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 800F25B4 000EF4F4  80 64 00 04 */	lwz r3, 4(r4)
/* 800F25B8 000EF4F8  28 03 00 00 */	cmplwi r3, 0
/* 800F25BC 000EF4FC  40 82 00 0C */	bne .L_800F25C8
/* 800F25C0 000EF500  93 A4 00 00 */	stw r29, 0(r4)
/* 800F25C4 000EF504  48 00 00 08 */	b .L_800F25CC
.L_800F25C8:
/* 800F25C8 000EF508  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_800F25CC:
/* 800F25CC 000EF50C  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 800F25D0 000EF510  38 00 00 00 */	li r0, 0
/* 800F25D4 000EF514  38 60 00 01 */	li r3, 1
/* 800F25D8 000EF518  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 800F25DC 000EF51C  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 800F25E0 000EF520  93 A4 00 04 */	stw r29, 4(r4)
/* 800F25E4 000EF524  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F25E8 000EF528  80 8D 8F D8 */	lwz r4, RunQueueBits@sda21(r13)
/* 800F25EC 000EF52C  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F25F0 000EF530  7C 60 00 30 */	slw r0, r3, r0
/* 800F25F4 000EF534  7C 80 03 78 */	or r0, r4, r0
/* 800F25F8 000EF538  90 0D 8F D8 */	stw r0, RunQueueBits@sda21(r13)
/* 800F25FC 000EF53C  90 6D 8F DC */	stw r3, RunQueueHint@sda21(r13)
/* 800F2600 000EF540  48 00 01 40 */	b .L_800F2740
.L_800F2604:
/* 800F2604 000EF544  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 800F2608 000EF548  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 800F260C 000EF54C  28 04 00 00 */	cmplwi r4, 0
/* 800F2610 000EF550  40 82 00 10 */	bne .L_800F2620
/* 800F2614 000EF554  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F2618 000EF558  90 A3 00 04 */	stw r5, 4(r3)
/* 800F261C 000EF55C  48 00 00 08 */	b .L_800F2624
.L_800F2620:
/* 800F2620 000EF560  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_800F2624:
/* 800F2624 000EF564  28 05 00 00 */	cmplwi r5, 0
/* 800F2628 000EF568  40 82 00 10 */	bne .L_800F2638
/* 800F262C 000EF56C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F2630 000EF570  90 83 00 00 */	stw r4, 0(r3)
/* 800F2634 000EF574  48 00 00 08 */	b .L_800F263C
.L_800F2638:
/* 800F2638 000EF578  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_800F263C:
/* 800F263C 000EF57C  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 800F2640 000EF580  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 800F2644 000EF584  48 00 00 24 */	b .L_800F2668
.L_800F2648:
/* 800F2648 000EF588  80 83 00 00 */	lwz r4, 0(r3)
/* 800F264C 000EF58C  28 04 00 00 */	cmplwi r4, 0
/* 800F2650 000EF590  41 82 00 14 */	beq .L_800F2664
/* 800F2654 000EF594  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 800F2658 000EF598  7C 04 00 00 */	cmpw r4, r0
/* 800F265C 000EF59C  40 80 00 08 */	bge .L_800F2664
/* 800F2660 000EF5A0  7C 80 23 78 */	mr r0, r4
.L_800F2664:
/* 800F2664 000EF5A4  80 63 00 10 */	lwz r3, 0x10(r3)
.L_800F2668:
/* 800F2668 000EF5A8  28 03 00 00 */	cmplwi r3, 0
/* 800F266C 000EF5AC  40 82 FF DC */	bne .L_800F2648
/* 800F2670 000EF5B0  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 800F2674 000EF5B4  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 800F2678 000EF5B8  80 A4 00 00 */	lwz r5, 0(r4)
/* 800F267C 000EF5BC  48 00 00 08 */	b .L_800F2684
.L_800F2680:
/* 800F2680 000EF5C0  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_800F2684:
/* 800F2684 000EF5C4  28 05 00 00 */	cmplwi r5, 0
/* 800F2688 000EF5C8  41 82 00 14 */	beq .L_800F269C
/* 800F268C 000EF5CC  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 800F2690 000EF5D0  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F2694 000EF5D4  7C 03 00 00 */	cmpw r3, r0
/* 800F2698 000EF5D8  40 81 FF E8 */	ble .L_800F2680
.L_800F269C:
/* 800F269C 000EF5DC  28 05 00 00 */	cmplwi r5, 0
/* 800F26A0 000EF5E0  40 82 00 34 */	bne .L_800F26D4
/* 800F26A4 000EF5E4  80 64 00 04 */	lwz r3, 4(r4)
/* 800F26A8 000EF5E8  28 03 00 00 */	cmplwi r3, 0
/* 800F26AC 000EF5EC  40 82 00 0C */	bne .L_800F26B8
/* 800F26B0 000EF5F0  93 A4 00 00 */	stw r29, 0(r4)
/* 800F26B4 000EF5F4  48 00 00 08 */	b .L_800F26BC
.L_800F26B8:
/* 800F26B8 000EF5F8  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_800F26BC:
/* 800F26BC 000EF5FC  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 800F26C0 000EF600  38 00 00 00 */	li r0, 0
/* 800F26C4 000EF604  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 800F26C8 000EF608  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F26CC 000EF60C  93 A3 00 04 */	stw r29, 4(r3)
/* 800F26D0 000EF610  48 00 00 2C */	b .L_800F26FC
.L_800F26D4:
/* 800F26D4 000EF614  90 BD 02 E0 */	stw r5, 0x2e0(r29)
/* 800F26D8 000EF618  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 800F26DC 000EF61C  93 A5 02 E4 */	stw r29, 0x2e4(r5)
/* 800F26E0 000EF620  28 03 00 00 */	cmplwi r3, 0
/* 800F26E4 000EF624  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 800F26E8 000EF628  40 82 00 10 */	bne .L_800F26F8
/* 800F26EC 000EF62C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F26F0 000EF630  93 A3 00 00 */	stw r29, 0(r3)
/* 800F26F4 000EF634  48 00 00 08 */	b .L_800F26FC
.L_800F26F8:
/* 800F26F8 000EF638  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_800F26FC:
/* 800F26FC 000EF63C  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 800F2700 000EF640  28 03 00 00 */	cmplwi r3, 0
/* 800F2704 000EF644  41 82 00 3C */	beq .L_800F2740
/* 800F2708 000EF648  83 A3 00 08 */	lwz r29, 8(r3)
.L_800F270C:
/* 800F270C 000EF64C  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 800F2710 000EF650  2C 00 00 00 */	cmpwi r0, 0
/* 800F2714 000EF654  41 81 00 2C */	bgt .L_800F2740
/* 800F2718 000EF658  7F A3 EB 78 */	mr r3, r29
/* 800F271C 000EF65C  4B FF F3 D1 */	bl __OSGetEffectivePriority
/* 800F2720 000EF660  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F2724 000EF664  38 83 00 00 */	addi r4, r3, 0
/* 800F2728 000EF668  7C 00 20 00 */	cmpw r0, r4
/* 800F272C 000EF66C  41 82 00 14 */	beq .L_800F2740
/* 800F2730 000EF670  7F A3 EB 78 */	mr r3, r29
/* 800F2734 000EF674  4B FF F3 F5 */	bl SetEffectivePriority
/* 800F2738 000EF678  7C 7D 1B 79 */	or. r29, r3, r3
/* 800F273C 000EF67C  40 82 FF D0 */	bne .L_800F270C
.L_800F2740:
/* 800F2740 000EF680  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F2744 000EF684  2C 00 00 00 */	cmpwi r0, 0
/* 800F2748 000EF688  41 82 00 0C */	beq .L_800F2754
/* 800F274C 000EF68C  38 60 00 00 */	li r3, 0
/* 800F2750 000EF690  4B FF F5 E9 */	bl SelectThread
.L_800F2754:
/* 800F2754 000EF694  7F E3 FB 78 */	mr r3, r31
/* 800F2758 000EF698  4B FF C5 09 */	bl OSRestoreInterrupts
/* 800F275C 000EF69C  7F C3 F3 78 */	mr r3, r30
/* 800F2760 000EF6A0  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800F2764 000EF6A4  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800F2768 000EF6A8  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800F276C 000EF6AC  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800F2770 000EF6B0  38 21 00 28 */	addi r1, r1, 0x28
/* 800F2774 000EF6B4  7C 08 03 A6 */	mtlr r0
/* 800F2778 000EF6B8  4E 80 00 20 */	blr 

.global OSSuspendThread
OSSuspendThread:
/* 800F277C 000EF6BC  7C 08 02 A6 */	mflr r0
/* 800F2780 000EF6C0  90 01 00 04 */	stw r0, 4(r1)
/* 800F2784 000EF6C4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F2788 000EF6C8  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F278C 000EF6CC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F2790 000EF6D0  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F2794 000EF6D4  7C 7D 1B 78 */	mr r29, r3
/* 800F2798 000EF6D8  4B FF C4 A1 */	bl OSDisableInterrupts
/* 800F279C 000EF6DC  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 800F27A0 000EF6E0  3B E3 00 00 */	addi r31, r3, 0
/* 800F27A4 000EF6E4  38 04 00 01 */	addi r0, r4, 1
/* 800F27A8 000EF6E8  7C 9E 23 79 */	or. r30, r4, r4
/* 800F27AC 000EF6EC  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 800F27B0 000EF6F0  40 82 01 14 */	bne .L_800F28C4
/* 800F27B4 000EF6F4  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 800F27B8 000EF6F8  2C 00 00 03 */	cmpwi r0, 3
/* 800F27BC 000EF6FC  41 82 00 F4 */	beq .L_800F28B0
/* 800F27C0 000EF700  40 80 00 14 */	bge .L_800F27D4
/* 800F27C4 000EF704  2C 00 00 01 */	cmpwi r0, 1
/* 800F27C8 000EF708  41 82 00 28 */	beq .L_800F27F0
/* 800F27CC 000EF70C  40 80 00 14 */	bge .L_800F27E0
/* 800F27D0 000EF710  48 00 00 E0 */	b .L_800F28B0
.L_800F27D4:
/* 800F27D4 000EF714  2C 00 00 05 */	cmpwi r0, 5
/* 800F27D8 000EF718  40 80 00 D8 */	bge .L_800F28B0
/* 800F27DC 000EF71C  48 00 00 20 */	b .L_800F27FC
.L_800F27E0:
/* 800F27E0 000EF720  38 00 00 01 */	li r0, 1
/* 800F27E4 000EF724  90 0D 8F DC */	stw r0, RunQueueHint@sda21(r13)
/* 800F27E8 000EF728  B0 1D 02 C8 */	sth r0, 0x2c8(r29)
/* 800F27EC 000EF72C  48 00 00 C4 */	b .L_800F28B0
.L_800F27F0:
/* 800F27F0 000EF730  7F A3 EB 78 */	mr r3, r29
/* 800F27F4 000EF734  4B FF F2 91 */	bl UnsetRun
/* 800F27F8 000EF738  48 00 00 B8 */	b .L_800F28B0
.L_800F27FC:
/* 800F27FC 000EF73C  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 800F2800 000EF740  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 800F2804 000EF744  28 04 00 00 */	cmplwi r4, 0
/* 800F2808 000EF748  40 82 00 10 */	bne .L_800F2818
/* 800F280C 000EF74C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F2810 000EF750  90 A3 00 04 */	stw r5, 4(r3)
/* 800F2814 000EF754  48 00 00 08 */	b .L_800F281C
.L_800F2818:
/* 800F2818 000EF758  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_800F281C:
/* 800F281C 000EF75C  28 05 00 00 */	cmplwi r5, 0
/* 800F2820 000EF760  40 82 00 10 */	bne .L_800F2830
/* 800F2824 000EF764  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F2828 000EF768  90 83 00 00 */	stw r4, 0(r3)
/* 800F282C 000EF76C  48 00 00 08 */	b .L_800F2834
.L_800F2830:
/* 800F2830 000EF770  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_800F2834:
/* 800F2834 000EF774  38 00 00 20 */	li r0, 0x20
/* 800F2838 000EF778  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 800F283C 000EF77C  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 800F2840 000EF780  80 64 00 04 */	lwz r3, 4(r4)
/* 800F2844 000EF784  28 03 00 00 */	cmplwi r3, 0
/* 800F2848 000EF788  40 82 00 0C */	bne .L_800F2854
/* 800F284C 000EF78C  93 A4 00 00 */	stw r29, 0(r4)
/* 800F2850 000EF790  48 00 00 08 */	b .L_800F2858
.L_800F2854:
/* 800F2854 000EF794  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_800F2858:
/* 800F2858 000EF798  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 800F285C 000EF79C  38 00 00 00 */	li r0, 0
/* 800F2860 000EF7A0  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 800F2864 000EF7A4  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F2868 000EF7A8  93 A3 00 04 */	stw r29, 4(r3)
/* 800F286C 000EF7AC  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 800F2870 000EF7B0  28 03 00 00 */	cmplwi r3, 0
/* 800F2874 000EF7B4  41 82 00 3C */	beq .L_800F28B0
/* 800F2878 000EF7B8  83 A3 00 08 */	lwz r29, 8(r3)
.L_800F287C:
/* 800F287C 000EF7BC  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 800F2880 000EF7C0  2C 00 00 00 */	cmpwi r0, 0
/* 800F2884 000EF7C4  41 81 00 2C */	bgt .L_800F28B0
/* 800F2888 000EF7C8  7F A3 EB 78 */	mr r3, r29
/* 800F288C 000EF7CC  4B FF F2 61 */	bl __OSGetEffectivePriority
/* 800F2890 000EF7D0  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F2894 000EF7D4  38 83 00 00 */	addi r4, r3, 0
/* 800F2898 000EF7D8  7C 00 20 00 */	cmpw r0, r4
/* 800F289C 000EF7DC  41 82 00 14 */	beq .L_800F28B0
/* 800F28A0 000EF7E0  7F A3 EB 78 */	mr r3, r29
/* 800F28A4 000EF7E4  4B FF F2 85 */	bl SetEffectivePriority
/* 800F28A8 000EF7E8  7C 7D 1B 79 */	or. r29, r3, r3
/* 800F28AC 000EF7EC  40 82 FF D0 */	bne .L_800F287C
.L_800F28B0:
/* 800F28B0 000EF7F0  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F28B4 000EF7F4  2C 00 00 00 */	cmpwi r0, 0
/* 800F28B8 000EF7F8  41 82 00 0C */	beq .L_800F28C4
/* 800F28BC 000EF7FC  38 60 00 00 */	li r3, 0
/* 800F28C0 000EF800  4B FF F4 79 */	bl SelectThread
.L_800F28C4:
/* 800F28C4 000EF804  7F E3 FB 78 */	mr r3, r31
/* 800F28C8 000EF808  4B FF C3 99 */	bl OSRestoreInterrupts
/* 800F28CC 000EF80C  7F C3 F3 78 */	mr r3, r30
/* 800F28D0 000EF810  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F28D4 000EF814  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F28D8 000EF818  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F28DC 000EF81C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F28E0 000EF820  38 21 00 20 */	addi r1, r1, 0x20
/* 800F28E4 000EF824  7C 08 03 A6 */	mtlr r0
/* 800F28E8 000EF828  4E 80 00 20 */	blr 

.global OSSleepThread
OSSleepThread:
/* 800F28EC 000EF82C  7C 08 02 A6 */	mflr r0
/* 800F28F0 000EF830  90 01 00 04 */	stw r0, 4(r1)
/* 800F28F4 000EF834  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F28F8 000EF838  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F28FC 000EF83C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800F2900 000EF840  7C 7E 1B 78 */	mr r30, r3
/* 800F2904 000EF844  4B FF C3 35 */	bl OSDisableInterrupts
/* 800F2908 000EF848  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 800F290C 000EF84C  80 84 00 E4 */	lwz r4, 0x800000E4@l(r4)
/* 800F2910 000EF850  38 00 00 04 */	li r0, 4
/* 800F2914 000EF854  7C 7F 1B 78 */	mr r31, r3
/* 800F2918 000EF858  B0 04 02 C8 */	sth r0, 0x2c8(r4)
/* 800F291C 000EF85C  93 C4 02 DC */	stw r30, 0x2dc(r4)
/* 800F2920 000EF860  80 BE 00 00 */	lwz r5, 0(r30)
/* 800F2924 000EF864  48 00 00 08 */	b .L_800F292C
.L_800F2928:
/* 800F2928 000EF868  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_800F292C:
/* 800F292C 000EF86C  28 05 00 00 */	cmplwi r5, 0
/* 800F2930 000EF870  41 82 00 14 */	beq .L_800F2944
/* 800F2934 000EF874  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 800F2938 000EF878  80 04 02 D0 */	lwz r0, 0x2d0(r4)
/* 800F293C 000EF87C  7C 03 00 00 */	cmpw r3, r0
/* 800F2940 000EF880  40 81 FF E8 */	ble .L_800F2928
.L_800F2944:
/* 800F2944 000EF884  28 05 00 00 */	cmplwi r5, 0
/* 800F2948 000EF888  40 82 00 30 */	bne .L_800F2978
/* 800F294C 000EF88C  80 7E 00 04 */	lwz r3, 4(r30)
/* 800F2950 000EF890  28 03 00 00 */	cmplwi r3, 0
/* 800F2954 000EF894  40 82 00 0C */	bne .L_800F2960
/* 800F2958 000EF898  90 9E 00 00 */	stw r4, 0(r30)
/* 800F295C 000EF89C  48 00 00 08 */	b .L_800F2964
.L_800F2960:
/* 800F2960 000EF8A0  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_800F2964:
/* 800F2964 000EF8A4  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 800F2968 000EF8A8  38 00 00 00 */	li r0, 0
/* 800F296C 000EF8AC  90 04 02 E0 */	stw r0, 0x2e0(r4)
/* 800F2970 000EF8B0  90 9E 00 04 */	stw r4, 4(r30)
/* 800F2974 000EF8B4  48 00 00 28 */	b .L_800F299C
.L_800F2978:
/* 800F2978 000EF8B8  90 A4 02 E0 */	stw r5, 0x2e0(r4)
/* 800F297C 000EF8BC  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 800F2980 000EF8C0  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 800F2984 000EF8C4  28 03 00 00 */	cmplwi r3, 0
/* 800F2988 000EF8C8  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 800F298C 000EF8CC  40 82 00 0C */	bne .L_800F2998
/* 800F2990 000EF8D0  90 9E 00 00 */	stw r4, 0(r30)
/* 800F2994 000EF8D4  48 00 00 08 */	b .L_800F299C
.L_800F2998:
/* 800F2998 000EF8D8  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_800F299C:
/* 800F299C 000EF8DC  38 00 00 01 */	li r0, 1
/* 800F29A0 000EF8E0  90 0D 8F DC */	stw r0, RunQueueHint@sda21(r13)
/* 800F29A4 000EF8E4  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F29A8 000EF8E8  2C 00 00 00 */	cmpwi r0, 0
/* 800F29AC 000EF8EC  41 82 00 0C */	beq .L_800F29B8
/* 800F29B0 000EF8F0  38 60 00 00 */	li r3, 0
/* 800F29B4 000EF8F4  4B FF F3 85 */	bl SelectThread
.L_800F29B8:
/* 800F29B8 000EF8F8  7F E3 FB 78 */	mr r3, r31
/* 800F29BC 000EF8FC  4B FF C2 A5 */	bl OSRestoreInterrupts
/* 800F29C0 000EF900  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F29C4 000EF904  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F29C8 000EF908  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800F29CC 000EF90C  38 21 00 18 */	addi r1, r1, 0x18
/* 800F29D0 000EF910  7C 08 03 A6 */	mtlr r0
/* 800F29D4 000EF914  4E 80 00 20 */	blr 

.global OSWakeupThread
OSWakeupThread:
/* 800F29D8 000EF918  7C 08 02 A6 */	mflr r0
/* 800F29DC 000EF91C  90 01 00 04 */	stw r0, 4(r1)
/* 800F29E0 000EF920  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F29E4 000EF924  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F29E8 000EF928  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800F29EC 000EF92C  7C 7E 1B 78 */	mr r30, r3
/* 800F29F0 000EF930  4B FF C2 49 */	bl OSDisableInterrupts
/* 800F29F4 000EF934  3C 80 80 4F */	lis r4, RunQueue@ha
/* 800F29F8 000EF938  3B E3 00 00 */	addi r31, r3, 0
/* 800F29FC 000EF93C  38 A4 67 38 */	addi r5, r4, RunQueue@l
/* 800F2A00 000EF940  48 00 00 9C */	b .L_800F2A9C
.L_800F2A04:
/* 800F2A04 000EF944  80 66 02 E0 */	lwz r3, 0x2e0(r6)
/* 800F2A08 000EF948  28 03 00 00 */	cmplwi r3, 0
/* 800F2A0C 000EF94C  40 82 00 10 */	bne .L_800F2A1C
/* 800F2A10 000EF950  38 00 00 00 */	li r0, 0
/* 800F2A14 000EF954  90 1E 00 04 */	stw r0, 4(r30)
/* 800F2A18 000EF958  48 00 00 0C */	b .L_800F2A24
.L_800F2A1C:
/* 800F2A1C 000EF95C  38 00 00 00 */	li r0, 0
/* 800F2A20 000EF960  90 03 02 E4 */	stw r0, 0x2e4(r3)
.L_800F2A24:
/* 800F2A24 000EF964  90 7E 00 00 */	stw r3, 0(r30)
/* 800F2A28 000EF968  38 00 00 01 */	li r0, 1
/* 800F2A2C 000EF96C  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 800F2A30 000EF970  80 06 02 CC */	lwz r0, 0x2cc(r6)
/* 800F2A34 000EF974  2C 00 00 00 */	cmpwi r0, 0
/* 800F2A38 000EF978  41 81 00 64 */	bgt .L_800F2A9C
/* 800F2A3C 000EF97C  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F2A40 000EF980  54 00 18 38 */	slwi r0, r0, 3
/* 800F2A44 000EF984  7C 05 02 14 */	add r0, r5, r0
/* 800F2A48 000EF988  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 800F2A4C 000EF98C  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 800F2A50 000EF990  80 64 00 04 */	lwz r3, 4(r4)
/* 800F2A54 000EF994  28 03 00 00 */	cmplwi r3, 0
/* 800F2A58 000EF998  40 82 00 0C */	bne .L_800F2A64
/* 800F2A5C 000EF99C  90 C4 00 00 */	stw r6, 0(r4)
/* 800F2A60 000EF9A0  48 00 00 08 */	b .L_800F2A68
.L_800F2A64:
/* 800F2A64 000EF9A4  90 C3 02 E0 */	stw r6, 0x2e0(r3)
.L_800F2A68:
/* 800F2A68 000EF9A8  90 66 02 E4 */	stw r3, 0x2e4(r6)
/* 800F2A6C 000EF9AC  38 00 00 00 */	li r0, 0
/* 800F2A70 000EF9B0  38 60 00 01 */	li r3, 1
/* 800F2A74 000EF9B4  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 800F2A78 000EF9B8  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 800F2A7C 000EF9BC  90 C4 00 04 */	stw r6, 4(r4)
/* 800F2A80 000EF9C0  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F2A84 000EF9C4  80 8D 8F D8 */	lwz r4, RunQueueBits@sda21(r13)
/* 800F2A88 000EF9C8  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F2A8C 000EF9CC  7C 60 00 30 */	slw r0, r3, r0
/* 800F2A90 000EF9D0  7C 80 03 78 */	or r0, r4, r0
/* 800F2A94 000EF9D4  90 0D 8F D8 */	stw r0, RunQueueBits@sda21(r13)
/* 800F2A98 000EF9D8  90 6D 8F DC */	stw r3, RunQueueHint@sda21(r13)
.L_800F2A9C:
/* 800F2A9C 000EF9DC  80 DE 00 00 */	lwz r6, 0(r30)
/* 800F2AA0 000EF9E0  28 06 00 00 */	cmplwi r6, 0
/* 800F2AA4 000EF9E4  40 82 FF 60 */	bne .L_800F2A04
/* 800F2AA8 000EF9E8  80 0D 8F DC */	lwz r0, RunQueueHint@sda21(r13)
/* 800F2AAC 000EF9EC  2C 00 00 00 */	cmpwi r0, 0
/* 800F2AB0 000EF9F0  41 82 00 0C */	beq .L_800F2ABC
/* 800F2AB4 000EF9F4  38 60 00 00 */	li r3, 0
/* 800F2AB8 000EF9F8  4B FF F2 81 */	bl SelectThread
.L_800F2ABC:
/* 800F2ABC 000EF9FC  7F E3 FB 78 */	mr r3, r31
/* 800F2AC0 000EFA00  4B FF C1 A1 */	bl OSRestoreInterrupts
/* 800F2AC4 000EFA04  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F2AC8 000EFA08  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F2ACC 000EFA0C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800F2AD0 000EFA10  38 21 00 18 */	addi r1, r1, 0x18
/* 800F2AD4 000EFA14  7C 08 03 A6 */	mtlr r0
/* 800F2AD8 000EFA18  4E 80 00 20 */	blr 

.global OSGetThreadPriority
OSGetThreadPriority:
/* 800F2ADC 000EFA1C  80 63 02 D4 */	lwz r3, 0x2d4(r3)
/* 800F2AE0 000EFA20  4E 80 00 20 */	blr 

.global OSClearStack
OSClearStack:
/* 800F2AE4 000EFA24  7C 08 02 A6 */	mflr r0
/* 800F2AE8 000EFA28  90 01 00 04 */	stw r0, 4(r1)
/* 800F2AEC 000EFA2C  54 60 82 1E */	rlwinm r0, r3, 0x10, 8, 0xf
/* 800F2AF0 000EFA30  50 60 C0 0E */	rlwimi r0, r3, 0x18, 0, 7
/* 800F2AF4 000EFA34  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800F2AF8 000EFA38  50 60 44 2E */	rlwimi r0, r3, 8, 0x10, 0x17
/* 800F2AFC 000EFA3C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800F2B00 000EFA40  7C 1F 03 78 */	mr r31, r0
/* 800F2B04 000EFA44  50 7F 06 3E */	rlwimi r31, r3, 0, 0x18, 0x1f
/* 800F2B08 000EFA48  4B FF A6 5D */	bl OSGetStackPointer
/* 800F2B0C 000EFA4C  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 800F2B10 000EFA50  80 A4 00 E4 */	lwz r5, 0x800000E4@l(r4)
/* 800F2B14 000EFA54  38 83 00 03 */	addi r4, r3, 3
/* 800F2B18 000EFA58  80 A5 03 08 */	lwz r5, 0x308(r5)
/* 800F2B1C 000EFA5C  38 A5 00 04 */	addi r5, r5, 4
/* 800F2B20 000EFA60  7C 05 18 40 */	cmplw r5, r3
/* 800F2B24 000EFA64  7C 85 20 50 */	subf r4, r5, r4
/* 800F2B28 000EFA68  54 84 F0 BE */	srwi r4, r4, 2
/* 800F2B2C 000EFA6C  40 80 00 50 */	bge .L_800F2B7C
/* 800F2B30 000EFA70  54 80 E8 FF */	rlwinm. r0, r4, 0x1d, 3, 0x1f
/* 800F2B34 000EFA74  7C 09 03 A6 */	mtctr r0
/* 800F2B38 000EFA78  41 82 00 34 */	beq .L_800F2B6C
.L_800F2B3C:
/* 800F2B3C 000EFA7C  93 E5 00 00 */	stw r31, 0(r5)
/* 800F2B40 000EFA80  93 E5 00 04 */	stw r31, 4(r5)
/* 800F2B44 000EFA84  93 E5 00 08 */	stw r31, 8(r5)
/* 800F2B48 000EFA88  93 E5 00 0C */	stw r31, 0xc(r5)
/* 800F2B4C 000EFA8C  93 E5 00 10 */	stw r31, 0x10(r5)
/* 800F2B50 000EFA90  93 E5 00 14 */	stw r31, 0x14(r5)
/* 800F2B54 000EFA94  93 E5 00 18 */	stw r31, 0x18(r5)
/* 800F2B58 000EFA98  93 E5 00 1C */	stw r31, 0x1c(r5)
/* 800F2B5C 000EFA9C  38 A5 00 20 */	addi r5, r5, 0x20
/* 800F2B60 000EFAA0  42 00 FF DC */	bdnz .L_800F2B3C
/* 800F2B64 000EFAA4  70 84 00 07 */	andi. r4, r4, 7
/* 800F2B68 000EFAA8  41 82 00 14 */	beq .L_800F2B7C
.L_800F2B6C:
/* 800F2B6C 000EFAAC  7C 89 03 A6 */	mtctr r4
.L_800F2B70:
/* 800F2B70 000EFAB0  93 E5 00 00 */	stw r31, 0(r5)
/* 800F2B74 000EFAB4  38 A5 00 04 */	addi r5, r5, 4
/* 800F2B78 000EFAB8  42 00 FF F8 */	bdnz .L_800F2B70
.L_800F2B7C:
/* 800F2B7C 000EFABC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800F2B80 000EFAC0  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800F2B84 000EFAC4  38 21 00 18 */	addi r1, r1, 0x18
/* 800F2B88 000EFAC8  7C 08 03 A6 */	mtlr r0
/* 800F2B8C 000EFACC  4E 80 00 20 */	blr 
